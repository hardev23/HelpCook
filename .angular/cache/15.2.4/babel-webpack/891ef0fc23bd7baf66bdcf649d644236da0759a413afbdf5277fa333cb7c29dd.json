{"ast":null,"code":"import { Usuarios } from 'src/app/Usuarios.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../registro/registro-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction EditarPerfilComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtext(1, \" Las contrase\\u00F1as no coinciden. \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\n/**\r\n * Componente para la página de editar perfil\r\n *\r\n * Modificará al usuario con los valores introducidos en el form\r\n */\nexport class EditarPerfilComponent {\n  /**\r\n   *  Injectamos los servicios\r\n   *\r\n   * almacenamos el usuario recibido\r\n   * @param registSvc Servicio para hacer la consulta al backend\r\n   * @param router Para el envio del Usuario a otras páginas\r\n   */\n  constructor(registSvc, router) {\n    this.registSvc = registSvc;\n    this.router = router;\n    /**\r\n    * Variable para controlar que la petición de las contraseña coincidan\r\n    */\n    this.contraseniaCoincide = true;\n    this.usuario = history.state.usuario;\n  }\n  /**\r\n   * Método que se carga cuando se inicializa la página\r\n   */\n  ngOnInit() {}\n  /**\r\n   * Método para la conversión de la foto a Base64 y almacenarla en la variable foto del usuario\r\n   * @param event Recibimos el evento con el File de la foto\r\n   */\n  onFileSelected(event) {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        this.usuario.foto = reader.result;\n      };\n    }\n  }\n  /**\r\n   * Método para la actualización de los datos del Usuario\r\n   *\r\n   * Creamos un Usuario con los datos modficados y los mandamos al servicio para su inserción en la base de datos\r\n   */\n  updateUserService() {\n    let usuario = new Usuarios(this.usuario.nick, this.usuario.contrasenia, this.usuario.nombre, this.usuario.apellido, this.usuario.email, this.usuario.foto);\n    console.log(\"Usuario que se manda\" + usuario);\n    this.registSvc.updateUser(usuario, this.usuario.idUsuarios).subscribe(usuario => {\n      alert(\"Usuario modificado correctamente, \" + usuario.nombre);\n      this.router.navigate(['/perfil'], {\n        state: {\n          usuario: usuario\n        }\n      });\n    }, error => {\n      console.log(\"Error en la respuesta del servidor:\", error);\n      if (error.error instanceof ErrorEvent) {\n        this.mensaje = 'Error de red:' + error.error.message;\n      } else {\n        this.mensaje = `Error en el servidor: ${error.status}: ${error.error}`;\n      }\n    });\n  }\n}\nEditarPerfilComponent.ɵfac = function EditarPerfilComponent_Factory(t) {\n  return new (t || EditarPerfilComponent)(i0.ɵɵdirectiveInject(i1.RegistroService), i0.ɵɵdirectiveInject(i2.Router));\n};\nEditarPerfilComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditarPerfilComponent,\n  selectors: [[\"app-editar-perfil\"]],\n  decls: 36,\n  vars: 15,\n  consts: [[1, \"text-center\", 2, \"margin-top\", \"30px\"], [\"routerLink\", \"\", 1, \"nav-link\"], [\"src\", \"/assets/img/logo.png\", \"alt\", \"\", 1, \"w-25\"], [\"enctype\", \"multipart/form-data\"], [1, \"form-group\"], [\"for\", \"InputNombre\"], [\"type\", \"text\", \"name\", \"nombre\", \"id\", \"InputNombre\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"placeholder\", \"ngModelChange\"], [\"for\", \"InputApellidos\"], [\"type\", \"text\", \"name\", \"apellidos\", \"id\", \"InputApellidos\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"placeholder\", \"ngModelChange\"], [\"for\", \"InputNick\"], [\"type\", \"text\", \"name\", \"nick\", \"id\", \"InputNick\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"placeholder\", \"ngModelChange\"], [\"for\", \"InputContrasenia\"], [\"type\", \"email\", \"name\", \"email\", \"id\", \"InputContrasenia\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"placeholder\", \"ngModelChange\"], [\"for\", \"InputContrasenia1\"], [\"type\", \"password\", \"name\", \"contrasenia\", \"id\", \"InputContrasenia1\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"confirm-password\"], [\"type\", \"password\", \"name\", \"confirm-password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"InputFoto\"], [\"type\", \"file\", \"name\", \"file\", \"id\", \"InputFoto\", \"aria-label\", \"file example\", \"required\", \"\", 1, \"form-control\", 3, \"change\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [1, \"invalid-feedback\"]],\n  template: function EditarPerfilComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"a\", 1);\n      i0.ɵɵelement(2, \"img\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"form\", 3)(4, \"div\", 4)(5, \"label\", 5);\n      i0.ɵɵtext(6, \"Nombre: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function EditarPerfilComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.usuario.nombre = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 4)(9, \"label\", 7);\n      i0.ɵɵtext(10, \"Apellidos: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function EditarPerfilComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.usuario.apellido = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 4)(13, \"label\", 9);\n      i0.ɵɵtext(14, \"Nombre de usuario: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function EditarPerfilComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.usuario.nick = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 4)(17, \"label\", 11);\n      i0.ɵɵtext(18, \"Correo electr\\u00F3nico: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function EditarPerfilComponent_Template_input_ngModelChange_19_listener($event) {\n        return ctx.usuario.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"div\", 4)(21, \"label\", 13);\n      i0.ɵɵtext(22, \"Contrase\\u00F1a: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function EditarPerfilComponent_Template_input_ngModelChange_23_listener($event) {\n        return ctx.contrasenia = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"div\", 4)(25, \"label\", 15);\n      i0.ɵɵtext(26, \"Confirmar Contrase\\u00F1a: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"input\", 16);\n      i0.ɵɵlistener(\"ngModelChange\", function EditarPerfilComponent_Template_input_ngModelChange_27_listener($event) {\n        return ctx.contraseniaRep = $event;\n      })(\"ngModelChange\", function EditarPerfilComponent_Template_input_ngModelChange_27_listener() {\n        return ctx.contraseniaCoincide = ctx.contrasenia === ctx.contraseniaRep;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(28, EditarPerfilComponent_div_28_Template, 2, 0, \"div\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"div\", 4)(30, \"label\", 18);\n      i0.ɵɵtext(31, \"Seleccione su foto de usuario: (PNG,JPG) \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"input\", 19);\n      i0.ɵɵlistener(\"change\", function EditarPerfilComponent_Template_input_change_32_listener($event) {\n        return ctx.onFileSelected($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(33, \"br\");\n      i0.ɵɵelementStart(34, \"button\", 20);\n      i0.ɵɵlistener(\"click\", function EditarPerfilComponent_Template_button_click_34_listener() {\n        return ctx.updateUserService();\n      });\n      i0.ɵɵtext(35, \"Actualizar datos\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.usuario.nombre);\n      i0.ɵɵproperty(\"ngModel\", ctx.usuario.nombre);\n      i0.ɵɵadvance(4);\n      i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.usuario.apellido);\n      i0.ɵɵproperty(\"ngModel\", ctx.usuario.apellido);\n      i0.ɵɵadvance(4);\n      i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.usuario.nick);\n      i0.ɵɵproperty(\"ngModel\", ctx.usuario.nick);\n      i0.ɵɵadvance(4);\n      i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.usuario.email);\n      i0.ɵɵproperty(\"ngModel\", ctx.usuario.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.contrasenia);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.contraseniaRep)(\"ngClass\", i0.ɵɵpureFunction1(13, _c0, !ctx.contraseniaCoincide));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.contraseniaCoincide);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"disabled\", !ctx.contraseniaCoincide);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgIf, i2.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n  styles: [\"body[_ngcontent-%COMP%] {\\n    font-family: Arial, sans-serif;\\n    font-weight: 400px;\\n}\\nform[_ngcontent-%COMP%] {\\n    background-color: #D4D0C4;\\n    padding: 20px;\\n    border-radius: 10px;\\n    width: 1000px;\\n    margin: 0 auto;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n    display: block;\\n    margin-bottom: 10px;\\n}\\n\\ninput[type=\\\"text\\\"][_ngcontent-%COMP%], input[type=\\\"email\\\"][_ngcontent-%COMP%], input[type=\\\"password\\\"][_ngcontent-%COMP%] {\\n    width: 100%;\\n    padding: 10px;\\n    margin-bottom: 20px;\\n    border-radius: 5px;\\n    border: none;\\n}\\n\\np[_ngcontent-%COMP%]{\\n    margin-top: 20px;\\n    text-align: center;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n    font-size: 20px;\\n    font-weight: bold;\\n}\\n\\n.form-control[_ngcontent-%COMP%] {\\n    font-size: 20px;\\n}\\n\\n.btn-primary[_ngcontent-%COMP%] {\\n    background-color: #8A9A8A;\\n    color: white;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width:20%;\\n    border: none;\\n    border-radius: 5px;\\n    padding: 5px;\\n    cursor: pointer;\\n    font-size: 16px;\\n    margin-left: 50%;\\n    transform: translateX(-50%);\\n}\\n\\nbutton[_ngcontent-%COMP%]:disabled{\\n    background-color: gray;\\n    color: white;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvZWRpdGFyLXBlcmZpbC9lZGl0YXItcGVyZmlsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSw4QkFBOEI7SUFDOUIsa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSx5QkFBeUI7SUFDekIsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixhQUFhO0lBQ2IsY0FBYztBQUNsQjs7QUFFQTtJQUNJLGNBQWM7SUFDZCxtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osYUFBYTtJQUNiLG1CQUFtQjtJQUNuQix1QkFBdUI7SUFDdkIsU0FBUztJQUNULFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLGVBQWU7SUFDZixlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLDJCQUEyQjtBQUMvQjs7QUFFQTtJQUNJLHNCQUFzQjtJQUN0QixZQUFZO0FBQ2hCIiwic291cmNlc0NvbnRlbnQiOlsiYm9keSB7XG4gICAgZm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDBweDtcbn1cbmZvcm0ge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNENEQwQzQ7XG4gICAgcGFkZGluZzogMjBweDtcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgIHdpZHRoOiAxMDAwcHg7XG4gICAgbWFyZ2luOiAwIGF1dG87XG59XG5cbmxhYmVsIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuXG5pbnB1dFt0eXBlPVwidGV4dFwiXSwgaW5wdXRbdHlwZT1cImVtYWlsXCJdLCBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0ge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgYm9yZGVyOiBub25lO1xufVxuXG5we1xuICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uZm9ybS1ncm91cCB7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4uZm9ybS1jb250cm9sIHtcbiAgICBmb250LXNpemU6IDIwcHg7XG59XG5cbi5idG4tcHJpbWFyeSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzhBOUE4QTtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIHdpZHRoOjIwJTtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIHBhZGRpbmc6IDVweDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIG1hcmdpbi1sZWZ0OiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xufVxuXG5idXR0b246ZGlzYWJsZWR7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ3JheTtcbiAgICBjb2xvcjogd2hpdGU7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Usuarios","i0","EditarPerfilComponent","constructor","registSvc","router","usuario","history","state","ngOnInit","onFileSelected","event","file","target","files","reader","FileReader","readAsDataURL","onload","foto","result","updateUserService","nick","contrasenia","nombre","apellido","email","console","log","updateUser","idUsuarios","subscribe","alert","navigate","error","ErrorEvent","mensaje","message","status","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\L\\Desktop\\helpcook-master\\helpcook-master\\src\\app\\pages\\editar-perfil\\editar-perfil.component.ts","C:\\Users\\L\\Desktop\\helpcook-master\\helpcook-master\\src\\app\\pages\\editar-perfil\\editar-perfil.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Usuarios } from 'src/app/Usuarios.model';\nimport { RegistroService } from '../registro/registro-service.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { UsuariosResponse } from 'src/app/UsuariosResponse.model';\n\n\n/**\n * Componente para la página de editar perfil\n *\n * Modificará al usuario con los valores introducidos en el form\n */\n@Component({\n  selector: 'app-editar-perfil',\n  templateUrl: './editar-perfil.component.html',\n  styleUrls: ['./editar-perfil.component.css']\n})\nexport class EditarPerfilComponent implements OnInit{\n  \n  /**\n   * Objeto Usuario que recibimos y modificaremos\n   */\n  usuario: Usuarios;\n\n  /**\n   * Variable para almacenar el nombre del usuario\n   */\n  nombre: string;\n\n  /**\n   * Variable para almacenar el apellido del Usuario\n   */\n  apellido: string;\n\n  /**\n   * Variable para almacenar el nick del Usuario\n   */\n  nick: string;\n  \n  /**\n   * Variable para almacenar el email del Usuario\n   */\n  email: string;\n\n  /**\n   *  Variable para almacenar la contraseña del Usuario\n   */\n  contrasenia: string;\n\n   /**\n   *  Variable para almacenar la contraseñaRepetida del Usuario\n   */\n  contraseniaRep: string;\n\n   /**\n   *  Variable para almacenar la foto del Usuario\n   */\n  foto: string;\n\n   /**\n   *  Variable para  mostrar un mensaje de error\n   */\n  mensaje: string;\n  \n\n  /**\n * Variable para controlar que la petición de las contraseña coincidan\n */\n  contraseniaCoincide: boolean = true;\n\n\n  /**\n   *  Injectamos los servicios \n   * \n   * almacenamos el usuario recibido\n   * @param registSvc Servicio para hacer la consulta al backend\n   * @param router Para el envio del Usuario a otras páginas\n   */\n  constructor(private registSvc: RegistroService, private router: Router) {\n    \n    this.usuario = history.state.usuario;\n    \n  }\n\n  /**\n   * Método que se carga cuando se inicializa la página\n   */\n  ngOnInit(): void {}\n\n\n\n  /**\n   * Método para la conversión de la foto a Base64 y almacenarla en la variable foto del usuario\n   * @param event Recibimos el evento con el File de la foto\n   */\n  onFileSelected(event) {\n    const file = event.target.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n      this.usuario.foto = reader.result as string;\n    };\n  }\n  }\n  \n  /**\n   * Método para la actualización de los datos del Usuario\n   * \n   * Creamos un Usuario con los datos modficados y los mandamos al servicio para su inserción en la base de datos\n   */\n  updateUserService(){\n    \n    let usuario = new Usuarios(this.usuario.nick, this.usuario.contrasenia, this.usuario.nombre, this.usuario.apellido, this.usuario.email, this.usuario.foto);\n     \n    console.log(\"Usuario que se manda\" + usuario);\n  \n      this.registSvc.updateUser(usuario,this.usuario.idUsuarios).subscribe((usuario) => {\n               \n          alert(\"Usuario modificado correctamente, \" + usuario.nombre);\n          this.router.navigate(['/perfil'],{state:{usuario:usuario}});\n      },\n        (error: HttpErrorResponse) => {\n           console.log(\"Error en la respuesta del servidor:\", error);\n          if (error.error instanceof ErrorEvent) {\n            this.mensaje = 'Error de red:'+ error.error.message;\n          } else {\n            this.mensaje = `Error en el servidor: ${error.status}: ${error.error}`;\n          }\n        }\n    );\n   \n    };\n\n}\n","<!-- Seccion logo -->\n<div class=\"text-center\" style=\"margin-top: 30px\">\n    <a class=\"nav-link\" routerLink=\"\"><img src=\"/assets/img/logo.png\" class=\"w-25\" alt=\"\" /></a>\n</div>\n<!-- Formulario de registro -->\n<form enctype=\"multipart/form-data\">\n    <!-- Nombre real que quiere editar -->\n    <div class=\"form-group\">\n        <label for=\"InputNombre\">Nombre: </label>\n        <input type=\"text\" class=\"form-control\" name=\"nombre\" [(ngModel)]=\"usuario.nombre\" id=\"InputNombre\"  placeholder=\"{{usuario.nombre}}\"\n            required>\n    </div>\n    <!-- Apellidos que quiere editar -->\n    <div class=\"form-group\">\n        <label for=\"InputApellidos\">Apellidos: </label>\n        <input type=\"text\" class=\"form-control\" name=\"apellidos\" [(ngModel)]=\"usuario.apellido\" id=\"InputApellidos\" placeholder=\"{{usuario.apellido}}\"\n            required>\n    </div>\n    <!-- Nick del usuario que quiere editar -->\n    <div class=\"form-group\">\n        <label for=\"InputNick\">Nombre de usuario: </label>\n        <input type=\"text\" class=\"form-control\" name=\"nick\" [(ngModel)]=\"usuario.nick\" id=\"InputNick\" placeholder=\"{{usuario.nick}}\"\n            required>\n    </div>\n    <!-- Correo del usuario que quiere editar -->\n    <div class=\"form-group\">\n        <label for=\"InputContrasenia\">Correo electrónico: </label>\n        <input type=\"email\" class=\"form-control\" name=\"email\" [(ngModel)]=\"usuario.email\" id=\"InputContrasenia\" placeholder=\"{{usuario.email}}\"\n            required>\n    </div>\n    <!-- Contraseña del usuario que quiere editar -->\n    <div class=\"form-group\">\n        <label for=\"InputContrasenia1\">Contraseña: </label>\n        <input type=\"password\" class=\"form-control\" name=\"contrasenia\" [(ngModel)]=\"contrasenia\" id=\"InputContrasenia1\"\n            required>\n    </div>\n    <!-- Confirmación de la contraseña -->\n    <div class=\"form-group\">\n        <label for=\"confirm-password\">Confirmar Contraseña: </label>\n        <input type=\"password\" class=\"form-control\" name=\"confirm-password\" [(ngModel)]=\"contraseniaRep\"\n        required\n        (ngModelChange)=\"contraseniaCoincide = contrasenia === contraseniaRep\"\n        [ngClass]=\"{'is-invalid': !contraseniaCoincide}\">\n        <div *ngIf=\"!contraseniaCoincide\" class=\"invalid-feedback\">\n            Las contraseñas no coinciden.\n        </div>\n    </div>\n    <!-- Foto de perfil del usuario que quiere editar -->\n    <div class=\"form-group\">\n        <label for=\"InputFoto\">Seleccione su foto de usuario: (PNG,JPG) </label>\n        <input type=\"file\"  class=\"form-control\" name=\"file\" id=\"InputFoto\" aria-label=\"file example\" required (change)=\"onFileSelected($event)\">\n        \n    </div>\n    <br/>\n    \n    <!-- Botón de registro que llama a la funcion guardar usuario --> \n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"updateUserService()\" [disabled]=\"!contraseniaCoincide\">Actualizar datos</button>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}