{"ast":null,"code":"import { Pasos } from 'src/app/Pasos.model';\nimport { RecetasRequest } from 'src/app/RecetasRequest.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../mostrar-recetas/recetasService.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"./captura-paso.component\";\nfunction SubirRecetaComponent_option_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 41);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tipo_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", tipo_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", tipo_r5, \" \");\n  }\n}\nfunction SubirRecetaComponent_div_53_div_1_input_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 46);\n    i0.ɵɵlistener(\"input\", function SubirRecetaComponent_div_53_div_1_input_3_Template_input_input_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ingXTipo_r7 = i0.ɵɵnextContext().$implicit;\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.setCantidad($event.target[\"value\"], ingXTipo_r7));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ingXTipo_r7 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵpropertyInterpolate1(\"name\", \"ingr\", ingXTipo_r7.idIngredientes, \"\")(\"id\", \"cantidad\", ingXTipo_r7.idIngredientes, \"\");\n    i0.ɵɵproperty(\"value\", ingXTipo_r7.cantidad);\n  }\n}\nfunction SubirRecetaComponent_div_53_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"input\", 44);\n    i0.ɵɵlistener(\"change\", function SubirRecetaComponent_div_53_div_1_Template_input_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const ingXTipo_r7 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.ingSelect(ingXTipo_r7));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2);\n    i0.ɵɵtemplate(3, SubirRecetaComponent_div_53_div_1_input_3_Template, 1, 3, \"input\", 45);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ingXTipo_r7 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", ingXTipo_r7.idIngredientes);\n    i0.ɵɵpropertyInterpolate(\"value\", ingXTipo_r7.idIngredientes);\n    i0.ɵɵproperty(\"checked\", ingXTipo_r7.seleccionado);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ingXTipo_r7.nombre, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ingXTipo_r7.seleccionado && ctx_r6.ingredientesXTipo.length > 0);\n  }\n}\nfunction SubirRecetaComponent_div_53_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 42);\n    i0.ɵɵtemplate(1, SubirRecetaComponent_div_53_div_1_Template, 4, 5, \"div\", 35);\n    i0.ɵɵpipe(2, \"slice\");\n    i0.ɵɵelementStart(3, \"span\", 43);\n    i0.ɵɵlistener(\"click\", function SubirRecetaComponent_div_53_Template_span_click_3_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.mostrarIngredientes());\n    });\n    i0.ɵɵtext(4, \"Mostrar m\\u00E1s\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(2, 1, ctx_r1.ingredientesXTipo, 0, ctx_r1.numIngrAMostrar));\n  }\n}\nfunction SubirRecetaComponent_li_59_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ingSelect_r17 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", ingSelect_r17.nombre, \" - \", ingSelect_r17.cantidad, \" \");\n  }\n}\nfunction SubirRecetaComponent_div_65_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 47)(1, \"h5\")(2, \"strong\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 48)(5, \"div\", 49)(6, \"h6\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 24);\n    i0.ɵɵelement(9, \"img\", 50);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const paso_r18 = ctx.$implicit;\n    const i_r19 = ctx.index;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Paso \", i_r19 + 1, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(paso_r18.descripcion);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"alt\", \"Foto de paso \", i_r19 + 1, \"\");\n    i0.ɵɵproperty(\"src\", paso_r18.foto, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction SubirRecetaComponent_ng_container_66_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"app-captura-paso\", 51);\n    i0.ɵɵlistener(\"pasoAgregado\", function SubirRecetaComponent_ng_container_66_Template_app_captura_paso_pasoAgregado_1_listener($event) {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.onPasoAgregado($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"contadorPasos\", ctx_r4.contadorPasos);\n  }\n}\n/**\r\n * Componente para crear una receta\r\n *\r\n * Se creará una receta con los datos introducidos por el usuario\r\n */\nexport class SubirRecetaComponent {\n  /**\r\n   * Constructor de la clase donde donde Injectamos los servicios necesarios\r\n   * @param router Routing para poder recibir el Usuario que va a subir la receta\r\n   * @param recetasService Servicio necesario para la optención de los datos de las recetas y los ingredientes\r\n   */\n  constructor(recetasService, router) {\n    this.recetasService = recetasService;\n    this.router = router;\n    /**\r\n     * Variable para saber la valoración media de la receta, como está recien subida siempre valdrá 0\r\n     */\n    this.valoracionMedia = 0;\n    /**\r\n     * Variable para mostrar el div de la inserción del paso\r\n     */\n    this.mostrarPaso = false;\n    /**\r\n     * Variable para almacenar el número de pasos insertados\r\n     */\n    this.contadorPasos = 0;\n    /**\r\n     * Array para mostrar los tipos de ingredientes que existen\r\n     */\n    this.tiposUnicos = [];\n    /**\r\n     * Variable para controlar los ingredeinets que se muestran\r\n     */\n    this.numIngrAMostrar = 5;\n    /**\r\n     * Variable para almacenar la categoria de la receta seleccionada por el usuario\r\n     */\n    this.categoriaSeleccionada = null;\n    this.ingredientes = [];\n    this.pasos = [];\n  }\n  /**\r\n   * Método que se carga cuando inicia la página\r\n   *\r\n   * Recuperamos el id del usuario de la ruta y se lo asignamos a nuestra variable idUsuario\r\n   *\r\n   * Obtenemos todos los ingredientes de la base de datos mandando la consulta a nuestro servicio,\r\n   * recorremos el array de ingredientes para optener los tipos de éstos y  guardamos los tipos no repetidos en nuestra variable tipos únicos.\r\n   *\r\n   * Creamos una variable Date para almacenar la fecha actual cuando ingresa en la página, recogemos el año, mes y dia de esa variable,\r\n   * y se la asignamos a la variable que vamos a mandar a la receta en el formato que necesitamos\r\n   */\n  ngOnInit() {\n    this.usuario = history.state.usuario;\n    this.recetasService.obtenerTodosIngredientes(null).subscribe(ingredientesMostrar => {\n      this.ingredientesMostrar = ingredientesMostrar;\n      const tipos = this.ingredientesMostrar.map(ingrediente => ingrediente.tipo);\n      this.tiposUnicos = tipos.filter((tipo, index) => tipos.indexOf(tipo) === index);\n    });\n    const fechaActual = new Date();\n    const anyo = fechaActual.getFullYear().toString();\n    let mes = (fechaActual.getMonth() + 1).toString();\n    if (mes.length === 1) {\n      mes = '0' + mes;\n    }\n    let dia = fechaActual.getDate().toString();\n    if (dia.length === 1) {\n      dia = '0' + dia;\n    }\n    let hora = fechaActual.getHours().toString();\n    if (hora.length === 1) {\n      hora = '0' + hora;\n    }\n    let minutos = fechaActual.getMinutes().toString();\n    if (minutos.length === 1) {\n      minutos = '0' + minutos;\n    }\n    let segundos = fechaActual.getSeconds().toString();\n    if (segundos.length === 1) {\n      segundos = '0' + segundos;\n    }\n    this.fechaAlta = new Date(`${anyo}-${mes}-${dia}T${hora}:${minutos}:${segundos}`);\n  }\n  /**\r\n   * Método para pasar la foto de la receta a Base 64\r\n   * y poder guardarlas como string\r\n   */\n  onFileSelected(event) {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        this.foto = reader.result;\n      };\n    }\n  }\n  /**\r\n   * Método para capturar la categoría de la receta y cambiar el color de la categoria seleccionada\r\n   */\n  capturarCategorias(event) {\n    const botonSeleccionado = event.currentTarget;\n    const botones = document.querySelectorAll('.btn-iconosbarra');\n    // Si hay un botón seleccionado, lo deseleccionamos\n    if (this.categoriaSeleccionada) {\n      this.categoriaSeleccionada.classList.remove('btn-iconosbarra-seleccionado');\n    }\n    this.categoria = botonSeleccionado.querySelector('img').alt;\n    botonSeleccionado.classList.add('btn-iconosbarra-seleccionado');\n    this.categoriaSeleccionada = botonSeleccionado;\n  }\n  /**\r\n   * Método para recuperar los ingredientes por el tipo que elija el Usuario\r\n   * recuperamos la seleccion y la mandamos al servicio pasandole el tipo de los ingredientes que queremos recuperar,\r\n   * obteniendo un array de ingredientes del tipo seleccionado\r\n   * @param event Recibimos la selección del usuario\r\n   */\n  tipo(event) {\n    const tipoSeleccionado = event.target.value;\n    this.tipoSeleccionado = tipoSeleccionado;\n    this.numIngrAMostrar = 5;\n    this.recetasService.obtenerTodosIngredientes(tipoSeleccionado).subscribe(ingredientesXTipo => {\n      this.ingredientesXTipo = ingredientesXTipo;\n    });\n  }\n  /**\r\n   * Método para mostar o no el input de cantidad del ingrediente seleccionado,\r\n   * si el ingrediente se selecciona lo añade al array de ingredientes para asociarlo a la receta,\r\n   * si lo deselecciona lo borra del array\r\n   * @param ingXtipo\r\n   */\n  ingSelect(ingXtipo) {\n    ingXtipo.seleccionado = !ingXtipo.seleccionado;\n    if (ingXtipo.seleccionado) {\n      this.ingredientes.push(ingXtipo);\n    } else {\n      const index = this.ingredientes.findIndex(i => i.idIngredientes === ingXtipo.idIngrediente);\n      this.ingredientes.splice(index, 1);\n    }\n  }\n  /**\r\n   * Método para asignar la cantidad al ingrediente seleccionado\r\n   * @param cantidad. Recibe la cantidad ingresada por el usuario\r\n   * @param ingXTipo. Recibe el ingrediente para asociarle la cantidad\r\n   */\n  setCantidad(cantidad, ingXTipo) {\n    const ingredienteseleccionado = this.ingredientes.find(i => i.idIngredientes === ingXTipo.idIngredientes);\n    if (typeof cantidad === 'string') {\n      ingXTipo.cantidad = cantidad;\n    }\n  }\n  /**\r\n   * Método para mostrar el div del paso cuando se le de al botón y contabilizar los pasos agregados\r\n   */\n  mostrarPasos() {\n    this.mostrarPaso = true;\n    this.contadorPasos++;\n  }\n  mostrarIngredientes() {\n    this.numIngrAMostrar += 5;\n  }\n  /**\r\n   * Método que se recibe del componente hijo el paso con los datos capturados\r\n   *\r\n   * para añadir al array de pasos un nuevo paso con los datos recibidos\r\n   * @param paso. Recibimos un array con los datos que nos interesan para creación del paso.\r\n   */\n  onPasoAgregado(paso) {\n    const tipo = this.pasos.length + 1;\n    console.log(tipo);\n    this.pasos.push(new Pasos(null, null, tipo, paso.descripcion, paso.foto));\n  }\n  /**\r\n   * Método para mandar al servicio los datos rellenados por el usuario y poder guardar la receta\r\n   */\n  subirReceta() {\n    let receta = new RecetasRequest(null, this.usuario.idUsuarios, this.descripcion, this.tiempo, this.foto, this.titulo, this.categoria, this.fechaAlta, this.valoracionMedia, this.comensales, this.ingredientes, this.pasos);\n    this.recetasService.subirReceta(receta).subscribe(response => this.subidaCorrectamente = true, error => {\n      if (error.error instanceof ErrorEvent) {\n        this.subidaCorrectamente = false;\n      } else {\n        this.subidaCorrectamente = false;\n      }\n    });\n    alert('Receta subida correctamente.');\n    this.router.navigate([''], {\n      state: {\n        usuario: this.usuario\n      }\n    });\n  }\n}\nSubirRecetaComponent.ɵfac = function SubirRecetaComponent_Factory(t) {\n  return new (t || SubirRecetaComponent)(i0.ɵɵdirectiveInject(i1.recetasService), i0.ɵɵdirectiveInject(i2.Router));\n};\nSubirRecetaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SubirRecetaComponent,\n  selectors: [[\"app-subir-receta\"]],\n  decls: 71,\n  vars: 10,\n  consts: [[1, \"text-center\", 2, \"margin-top\", \"30px\", \"margin-bottom\", \"30px\"], [\"routerLink\", \"\", 1, \"nav-link\"], [\"src\", \"/assets/img/logo.png\", \"alt\", \"\", 1, \"w-25\"], [\"enctype\", \"multipart/form-data\"], [1, \"mb-3\"], [\"for\", \"InputFoto\", 1, \"form-label\", \"fw-bold\", \"text-center\", \"mt-3\"], [\"type\", \"file\", \"name\", \"foto\", \"id\", \"InputFoto\", \"required\", \"\", 1, \"form-control\", \"fs-5\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"for\", \"InputTitulo\", 1, \"form-label\", \"fw-bold\", \"text-center\", \"mt-3\"], [\"type\", \"text\", \"name\", \"titulo\", \"id\", \"InputTitulo\", \"placeholder\", \"Introduce el t\\u00EDtulo de la receta\", 1, \"form-control\", \"fs-5\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"InputDescripcion\", 1, \"form-label\", \"fw-bold\", \"text-center\", \"mt-3\"], [\"type\", \"text\", \"name\", \"descripcion\", \"id\", \"InputDescripcion\", \"placeholder\", \"Breve descripci\\u00F3n de tu receta\", 1, \"form-control\", \"fs-5\", 3, \"ngModel\", \"ngModelChange\"], [1, \"text-center\", \"mt-5\"], [\"for\", \"FormControlImput1\", 1, \"form-label\", \"fw-bold\", \"text-center\", \"mt-3\"], [\"role\", \"group\", \"aria-label\", \"Basic example\", 1, \"btn-group\", \"barracategorias\"], [\"type\", \"button\", 1, \"btn\", \"iconosbarra\", 3, \"click\"], [\"src\", \"/assets/iconos/carnes.png\", \"width\", \"40px\", \"alt\", \"Carnes\", 2, \"margin-left\", \"30px\"], [\"src\", \"/assets/iconos/pescado.png\", \"width\", \"40px\", \"alt\", \"Pescados\", 2, \"margin-left\", \"30px\"], [\"src\", \"/assets/iconos/legumbres.png\", \"width\", \"40px\", \"alt\", \"Legumbres\", 2, \"margin-left\", \"30px\"], [\"src\", \"/assets/iconos/arroces.png\", \"width\", \"40px\", \"alt\", \"Arroces\", 2, \"margin-left\", \"30px\"], [\"src\", \"/assets/iconos/pasta.png\", \"width\", \"40px\", \"alt\", \"Pastas\", 2, \"margin-left\", \"30px\"], [\"src\", \"/assets/iconos/verduras.png\", \"width\", \"40px\", \"alt\", \"Verduras\", 2, \"margin-left\", \"30px\"], [\"src\", \"/assets/iconos/setas.png\", \"width\", \"40px\", \"alt\", \"Setas\", 2, \"margin-left\", \"30px\"], [\"src\", \"/assets/iconos/postre1.png\", \"width\", \"40px\", \"alt\", \"Postres\", 2, \"margin-left\", \"30px\", \"margin-right\", \"30px\"], [1, \"row\"], [1, \"col\"], [\"for\", \"InputComensales\", 1, \"form-label\", \"custom-label\", \"fw-bold\", \"mt-5\", \"ms-5\"], [\"type\", \"number\", \"name\", \"comensales\", \"id\", \"InputComensales\", \"placeholder\", \"\\u00BFCuantas personas?\", 1, \"form-control\", \"fs-5\", 2, \"width\", \"200px\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"idPreparacion\", 1, \"form-label\", \"custom-label\", \"fw-bold\", \"mt-5\"], [\"type\", \"number\", \"name\", \"preparacion\", \"id\", \"idPreparacion\", \"placeholder\", \"Tiempo en min.\", 1, \"form-control\", \"fs-5\", 2, \"width\", \"200px\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"InputIngredientesTipo\", 1, \"form-label\", \"custom-label\", \"fw-bold\", \"mt-5\", \"text-center\", 2, \"margin-bottom\", \"30px\"], [\"for\", \"InputIngredientesTipo\", \"aria-label\", \".form-select-lg example\", 1, \"form-select\", \"form-select\", \"fw-bold\", \"mt-2\", 3, \"change\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"form-check\", \"style\", \"margin-top: 15px\", 4, \"ngIf\"], [1, \"col\", 2, \"margin-top\", \"10px\", \"margin-left\", \"120px\"], [4, \"ngFor\", \"ngForOf\"], [\"id\", \"pasos-container\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [\"style\", \"margin-top: 40px\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [3, \"value\"], [1, \"form-check\", 2, \"margin-top\", \"15px\"], [1, \"mostrar-mas\", 3, \"click\"], [\"type\", \"checkbox\", 1, \"form-check-input\", 3, \"id\", \"checked\", \"value\", \"change\"], [\"class\", \"form-control\", \"type\", \"text\", \"placeholder\", \"Cantidad\", 3, \"name\", \"id\", \"value\", \"input\", 4, \"ngIf\"], [\"type\", \"text\", \"placeholder\", \"Cantidad\", 1, \"form-control\", 3, \"name\", \"id\", \"value\", \"input\"], [2, \"margin-top\", \"40px\"], [1, \"row\", 2, \"margin-top\", \"25px\"], [1, \"col\", \"descripcion\", \"rounded\"], [\"width\", \"300px\", 1, \"rounded\", 3, \"src\", \"alt\"], [3, \"contadorPasos\", \"pasoAgregado\"]],\n  template: function SubirRecetaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"a\", 1);\n      i0.ɵɵelement(2, \"img\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"form\", 3)(4, \"div\", 4)(5, \"label\", 5);\n      i0.ɵɵtext(6, \"Adjunta la imagen\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function SubirRecetaComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.foto = $event;\n      })(\"change\", function SubirRecetaComponent_Template_input_change_7_listener($event) {\n        return ctx.onFileSelected($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 4)(9, \"label\", 7);\n      i0.ɵɵtext(10, \"T\\u00EDtulo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function SubirRecetaComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.titulo = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 4)(13, \"label\", 9);\n      i0.ɵɵtext(14, \"Descripci\\u00F3n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function SubirRecetaComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.descripcion = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 11)(17, \"label\", 12);\n      i0.ɵɵtext(18, \"Categor\\u00EDa\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 13)(20, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function SubirRecetaComponent_Template_button_click_20_listener($event) {\n        return ctx.capturarCategorias($event);\n      });\n      i0.ɵɵelement(21, \"img\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function SubirRecetaComponent_Template_button_click_22_listener($event) {\n        return ctx.capturarCategorias($event);\n      });\n      i0.ɵɵelement(23, \"img\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function SubirRecetaComponent_Template_button_click_24_listener($event) {\n        return ctx.capturarCategorias($event);\n      });\n      i0.ɵɵelement(25, \"img\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function SubirRecetaComponent_Template_button_click_26_listener($event) {\n        return ctx.capturarCategorias($event);\n      });\n      i0.ɵɵelement(27, \"img\", 18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function SubirRecetaComponent_Template_button_click_28_listener($event) {\n        return ctx.capturarCategorias($event);\n      });\n      i0.ɵɵelement(29, \"img\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function SubirRecetaComponent_Template_button_click_30_listener($event) {\n        return ctx.capturarCategorias($event);\n      });\n      i0.ɵɵelement(31, \"img\", 20);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function SubirRecetaComponent_Template_button_click_32_listener($event) {\n        return ctx.capturarCategorias($event);\n      });\n      i0.ɵɵelement(33, \"img\", 21);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function SubirRecetaComponent_Template_button_click_34_listener($event) {\n        return ctx.capturarCategorias($event);\n      });\n      i0.ɵɵelement(35, \"img\", 22);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(36, \"div\", 23)(37, \"div\", 24)(38, \"label\", 25);\n      i0.ɵɵtext(39, \"Comensales\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"input\", 26);\n      i0.ɵɵlistener(\"ngModelChange\", function SubirRecetaComponent_Template_input_ngModelChange_40_listener($event) {\n        return ctx.comensales = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(41, \"div\", 24)(42, \"label\", 27);\n      i0.ɵɵtext(43, \"Tiempo de preparaci\\u00F3n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(44, \"input\", 28);\n      i0.ɵɵlistener(\"ngModelChange\", function SubirRecetaComponent_Template_input_ngModelChange_44_listener($event) {\n        return ctx.tiempo = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(45, \"div\", 23)(46, \"label\", 29);\n      i0.ɵɵtext(47, \"Ingredientes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(48, \"div\", 24)(49, \"select\", 30);\n      i0.ɵɵlistener(\"change\", function SubirRecetaComponent_Template_select_change_49_listener($event) {\n        return ctx.tipo($event);\n      });\n      i0.ɵɵelementStart(50, \"option\", 31);\n      i0.ɵɵtext(51, \"Selecciona el tipo de ingrediente\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(52, SubirRecetaComponent_option_52_Template, 2, 2, \"option\", 32);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(53, SubirRecetaComponent_div_53_Template, 5, 5, \"div\", 33);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(54, \"div\", 34)(55, \"h5\")(56, \"strong\");\n      i0.ɵɵtext(57, \"Ingredientes seleccionados:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(58, \"ul\");\n      i0.ɵɵtemplate(59, SubirRecetaComponent_li_59_Template, 2, 2, \"li\", 35);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(60, \"br\")(61, \"br\");\n      i0.ɵɵelementStart(62, \"div\", 36)(63, \"button\", 37);\n      i0.ɵɵlistener(\"click\", function SubirRecetaComponent_Template_button_click_63_listener() {\n        return ctx.mostrarPasos();\n      });\n      i0.ɵɵtext(64, \" Agrega los Pasos \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(65, SubirRecetaComponent_div_65_Template, 10, 4, \"div\", 38);\n      i0.ɵɵtemplate(66, SubirRecetaComponent_ng_container_66_Template, 2, 1, \"ng-container\", 39);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(67, \"br\")(68, \"br\");\n      i0.ɵɵelementStart(69, \"button\", 40);\n      i0.ɵɵlistener(\"click\", function SubirRecetaComponent_Template_button_click_69_listener() {\n        return ctx.subirReceta();\n      });\n      i0.ɵɵtext(70, \" Enviar \");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.foto);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.titulo);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.descripcion);\n      i0.ɵɵadvance(25);\n      i0.ɵɵproperty(\"ngModel\", ctx.comensales);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.tiempo);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tiposUnicos);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.tipoSeleccionado);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ingredientes);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.pasos);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.mostrarPaso);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i2.RouterLink, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm, i5.CapturaPasoComponent, i3.SlicePipe],\n  styles: [\"body[_ngcontent-%COMP%] {\\n    font-family: Arial, sans-serif;\\n}\\n\\nform[_ngcontent-%COMP%] {\\n    background-color: #D4D0C4;\\n    padding: 20px;\\n    border-radius: 10px;\\n    width: 1000px;\\n    margin: 0 auto;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n    display: block;\\n    margin-bottom: 15px;\\n}\\n\\ninput[type=\\\"text\\\"][_ngcontent-%COMP%], input[type=\\\"email\\\"][_ngcontent-%COMP%], input[type=\\\"password\\\"][_ngcontent-%COMP%] {\\n    width: 100%;\\n    padding: 10px;\\n    margin-bottom: 20px;\\n    border-radius: 5px;\\n    border: none;\\n}\\n\\np[_ngcontent-%COMP%]{\\n    margin-top: 20px;\\n    text-align: center;\\n}\\n\\n.form-label[_ngcontent-%COMP%] {\\n    font-size: 25px;\\n}\\n\\n.btn-group[_ngcontent-%COMP%] {\\n    background-color: #edebe6;\\n    border-radius: 30px;\\n}\\n\\n.btn-iconosbarra[_ngcontent-%COMP%] {\\n    color: white;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 33.3%;\\n    border: none;\\n    border-radius: 5px;\\n    padding: 5px;\\n    cursor: pointer;\\n    font-size: 16px;\\n    margin-left: 50%;\\n    margin-top: 20px;\\n    transform: translateX(-50%);\\n}\\n\\n.btn-iconosbarra-seleccionado[_ngcontent-%COMP%]{\\n background-color: #8A9A8A;\\n \\n}\\n\\n\\n.btn-primary[_ngcontent-%COMP%] {\\n    background-color: #8A9A8A;\\n    color: white;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width:40%;\\n    border: none;\\n    border-radius: 5px;\\n    padding: 5px;\\n    cursor: pointer;\\n    font-size: 16px;\\n    margin-left: 50%;\\n    transform: translateX(-50%);\\n}\\n\\n.btn-guardar-paso[_ngcontent-%COMP%]{\\n    background-color:#5d5b56;\\n    color: white;\\n    display: block;\\n    align-items:center;\\n    justify-content: center;\\n    width:15%;\\n    border: none;\\n    border-radius: 5px;\\n    \\n    cursor: pointer;\\n    font-size: 16px;\\n    \\n    \\n    \\n    \\n}\\n.descripcion[_ngcontent-%COMP%] {\\n    font-size: 25px;\\n    background-color: #f5f6ed;\\n    color: #3c240d;\\n  }\\n  \\n.mostrar-mas[_ngcontent-%COMP%]{\\nmargin-top: 15px;\\ntext-decoration: underline;\\nfont-size: 18px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvc3ViaXItcmVjZXRhL3N1YmlyLXJlY2V0YS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksOEJBQThCO0FBQ2xDOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsYUFBYTtJQUNiLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksV0FBVztJQUNYLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsa0JBQWtCO0lBQ2xCLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osYUFBYTtJQUNiLG1CQUFtQjtJQUNuQix1QkFBdUI7SUFDdkIsWUFBWTtJQUNaLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLGVBQWU7SUFDZixlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQiwyQkFBMkI7QUFDL0I7O0FBRUE7Q0FDQyx5QkFBeUI7O0FBRTFCOzs7QUFHQTtJQUNJLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osYUFBYTtJQUNiLG1CQUFtQjtJQUNuQix1QkFBdUI7SUFDdkIsU0FBUztJQUNULFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLGVBQWU7SUFDZixlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLDJCQUEyQjtBQUMvQjs7QUFFQTtJQUNJLHdCQUF3QjtJQUN4QixZQUFZO0lBQ1osY0FBYztJQUNkLGtCQUFrQjtJQUNsQix1QkFBdUI7SUFDdkIsU0FBUztJQUNULFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixlQUFlO0lBQ2Ysc0JBQXNCO0lBQ3RCLGlDQUFpQztJQUNqQyxpQkFBaUI7SUFDakIsc0JBQXNCO0FBQzFCO0FBQ0E7SUFDSSxlQUFlO0lBQ2YseUJBQXlCO0lBQ3pCLGNBQWM7RUFDaEI7O0FBRUY7QUFDQSxnQkFBZ0I7QUFDaEIsMEJBQTBCO0FBQzFCLGVBQWU7QUFDZiIsInNvdXJjZXNDb250ZW50IjpbImJvZHkge1xuICAgIGZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjtcbn1cblxuZm9ybSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0Q0RDBDNDtcbiAgICBwYWRkaW5nOiAyMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgd2lkdGg6IDEwMDBweDtcbiAgICBtYXJnaW46IDAgYXV0bztcbn1cblxubGFiZWwge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XG59XG5cbmlucHV0W3R5cGU9XCJ0ZXh0XCJdLCBpbnB1dFt0eXBlPVwiZW1haWxcIl0sIGlucHV0W3R5cGU9XCJwYXNzd29yZFwiXSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBib3JkZXI6IG5vbmU7XG59XG5cbnB7XG4gICAgbWFyZ2luLXRvcDogMjBweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5mb3JtLWxhYmVsIHtcbiAgICBmb250LXNpemU6IDI1cHg7XG59XG5cbi5idG4tZ3JvdXAge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNlZGViZTY7XG4gICAgYm9yZGVyLXJhZGl1czogMzBweDtcbn1cblxuLmJ0bi1pY29ub3NiYXJyYSB7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB3aWR0aDogMzMuMyU7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBwYWRkaW5nOiA1cHg7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBtYXJnaW4tbGVmdDogNTAlO1xuICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xufVxuXG4uYnRuLWljb25vc2JhcnJhLXNlbGVjY2lvbmFkb3tcbiBiYWNrZ3JvdW5kLWNvbG9yOiAjOEE5QThBO1xuIFxufVxuXG5cbi5idG4tcHJpbWFyeSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzhBOUE4QTtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIHdpZHRoOjQwJTtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIHBhZGRpbmc6IDVweDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIG1hcmdpbi1sZWZ0OiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xufVxuXG4uYnRuLWd1YXJkYXItcGFzb3tcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiM1ZDViNTY7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGFsaWduLWl0ZW1zOmNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB3aWR0aDoxNSU7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICAvKiBwYWRkaW5nOiA1cHg7ICovXG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAvKiBtYXJnaW4tbGVmdDogNTAlOyAqL1xuICAgIC8qIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTsgKi9cbiAgICAvKiBmbG9hdDogcmlnaHQ7Ki9cbiAgICAvKnRleHQtYWxpZ246IHJpZ2h0OyAqL1xufVxuLmRlc2NyaXBjaW9uIHtcbiAgICBmb250LXNpemU6IDI1cHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjZlZDtcbiAgICBjb2xvcjogIzNjMjQwZDtcbiAgfVxuICBcbi5tb3N0cmFyLW1hc3tcbm1hcmdpbi10b3A6IDE1cHg7XG50ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbmZvbnQtc2l6ZTogMThweDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAKA,SAASA,KAAK,QAAQ,qBAAqB;AAC3C,SAASC,cAAc,QAAQ,8BAA8B;;;;;;;;;ICuErDC,kCAAwD;IACtDA,YACF;IAAAA,iBAAS;;;;IAFgCA,+BAAc;IACrDA,eACF;IADEA,wCACF;;;;;;IAQEA,iCAE4D;IAA1DA;MAAAA;MAAA;MAAA;MAAA,OAASA,gDAA0B,OAAO,eAAY;IAAA,EAAC;IAFzDA,iBAE4D;;;;IAF0CA,yEAAwC;IAC1EA,4CAA2B;;;;;;IALjGA,2BAA2E;IAECA;MAAA;MAAA;MAAA;MAAA,OAAUA,6CAAmB;IAAA,EAAC;IADxGA,iBAC2G;IAAAA,YAE3G;IAAAA,uFAE4D;IAC9DA,iBAAM;;;;;IAN4CA,eAAkC;IAAlCA,0DAAkC;IAC9CA,6DAAqC;IAAvEA,kDAAiC;IAAwEA,eAE3G;IAF2GA,kDAE3G;IAAQA,eAA2D;IAA3DA,sFAA2D;;;;;;IALvEA,+BAA0E;IACxEA,6EAOM;;IACNA,gCAGC;IADDA;MAAAA;MAAA;MAAA,OAASA,4CAAqB;IAAA,EAAC;IAC9BA,gCAAW;IAAAA,iBACb;;;;IAZ2BA,eAA8C;IAA9CA,mGAA8C;;;;;IAmBxEA,0BAA2C;IACzCA,YACF;IAAAA,iBAAK;;;;IADHA,eACF;IADEA,oFACF;;;;;IAWJA,+BAAwE;IAE5DA,YAAgB;IAAAA,iBAAS;IAEnCA,+BAA2C;IAEnCA,YAAsB;IAAAA,iBAAK;IAEjCA,+BAAiB;IACfA,0BAAsF;IACxFA,iBAAM;;;;;IAREA,eAAgB;IAAhBA,6CAAgB;IAIlBA,eAAsB;IAAtBA,0CAAsB;IAG2BA,eAA8B;IAA9BA,gEAA8B;IAA9EA,qDAAiB;;;;;;IAI5BA,6BAAkC;IAChCA,4CAA0F;IAAxCA;MAAAA;MAAA;MAAA,OAAgBA,6CAAsB;IAAA,EAAC;IAACA,iBAAmB;IAC/GA,0BAAe;;;;IADKA,eAA+B;IAA/BA,oDAA+B;;;ADxHvD;;;;;AAUA,OAAM,MAAOC,oBAAoB;EAqG/B;;;;;EAKAC,YACUC,cAA8B,EAC9BC,MAAc;IADd,mBAAc,GAAdD,cAAc;IACd,WAAM,GAANC,MAAM;IAxEhB;;;IAGA,oBAAe,GAAW,CAAC;IAY3B;;;IAGA,gBAAW,GAAY,KAAK;IAE5B;;;IAGA,kBAAa,GAAW,CAAC;IAYzB;;;IAGA,gBAAW,GAAa,EAAE;IAY1B;;;IAGA,oBAAe,GAAW,CAAC;IAO3B;;;IAGA,0BAAqB,GAAQ,IAAI;IAW/B,IAAI,CAACC,YAAY,GAAG,EAAE;IACtB,IAAI,CAACC,KAAK,GAAG,EAAE;EACjB;EAEA;;;;;;;;;;;EAWAC,QAAQ;IACN,IAAI,CAACC,OAAO,GAAGC,OAAO,CAACC,KAAK,CAACF,OAAO;IAEpC,IAAI,CAACL,cAAc,CAChBQ,wBAAwB,CAAC,IAAI,CAAC,CAC9BC,SAAS,CAAEC,mBAAmB,IAAI;MACjC,IAAI,CAACA,mBAAmB,GAAGA,mBAAmB;MAE9C,MAAMC,KAAK,GAAG,IAAI,CAACD,mBAAmB,CAACE,GAAG,CACvCC,WAAW,IAAKA,WAAW,CAACC,IAAI,CAClC;MACD,IAAI,CAACC,WAAW,GAAGJ,KAAK,CAACK,MAAM,CAC7B,CAACF,IAAI,EAAEG,KAAK,KAAKN,KAAK,CAACO,OAAO,CAACJ,IAAI,CAAC,KAAKG,KAAK,CAC/C;IACH,CAAC,CAAC;IAEJ,MAAME,WAAW,GAAG,IAAIC,IAAI,EAAE;IAC9B,MAAMC,IAAI,GAAGF,WAAW,CAACG,WAAW,EAAE,CAACC,QAAQ,EAAE;IACjD,IAAIC,GAAG,GAAG,CAACL,WAAW,CAACM,QAAQ,EAAE,GAAG,CAAC,EAAEF,QAAQ,EAAE;IACjD,IAAIC,GAAG,CAACE,MAAM,KAAK,CAAC,EAAE;MACpBF,GAAG,GAAG,GAAG,GAAGA,GAAG;;IAEjB,IAAIG,GAAG,GAAGR,WAAW,CAACS,OAAO,EAAE,CAACL,QAAQ,EAAE;IAC1C,IAAII,GAAG,CAACD,MAAM,KAAK,CAAC,EAAE;MACpBC,GAAG,GAAG,GAAG,GAAGA,GAAG;;IAEjB,IAAIE,IAAI,GAAGV,WAAW,CAACW,QAAQ,EAAE,CAACP,QAAQ,EAAE;IAC5C,IAAIM,IAAI,CAACH,MAAM,KAAK,CAAC,EAAE;MACrBG,IAAI,GAAG,GAAG,GAAGA,IAAI;;IAEnB,IAAIE,OAAO,GAAGZ,WAAW,CAACa,UAAU,EAAE,CAACT,QAAQ,EAAE;IACjD,IAAIQ,OAAO,CAACL,MAAM,KAAK,CAAC,EAAE;MACxBK,OAAO,GAAG,GAAG,GAAGA,OAAO;;IAEzB,IAAIE,QAAQ,GAAGd,WAAW,CAACe,UAAU,EAAE,CAACX,QAAQ,EAAE;IAClD,IAAIU,QAAQ,CAACP,MAAM,KAAK,CAAC,EAAE;MACzBO,QAAQ,GAAG,GAAG,GAAGA,QAAQ;;IAG3B,IAAI,CAACE,SAAS,GAAG,IAAIf,IAAI,CAAC,GAAGC,IAAI,IAAIG,GAAG,IAAIG,GAAG,IAAIE,IAAI,IAAIE,OAAO,IAAIE,QAAQ,EAAE,CAAC;EAEnF;EAEA;;;;EAIAG,cAAc,CAACC,KAAU;IACvB,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAElC,IAAIF,IAAI,EAAE;MACR,MAAMG,MAAM,GAAG,IAAIC,UAAU,EAAE;MAC/BD,MAAM,CAACE,aAAa,CAACL,IAAI,CAAC;MAC1BG,MAAM,CAACG,MAAM,GAAG,MAAK;QACnB,IAAI,CAACC,IAAI,GAAGJ,MAAM,CAACK,MAAgB;MACrC,CAAC;;EAEL;EAEA;;;EAGAC,kBAAkB,CAACV,KAAU;IAC3B,MAAMW,iBAAiB,GAAGX,KAAK,CAACY,aAAa;IAC7C,MAAMC,OAAO,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,CAAC;IAE7D;IACA,IAAI,IAAI,CAACC,qBAAqB,EAAE;MAC9B,IAAI,CAACA,qBAAqB,CAACC,SAAS,CAACC,MAAM,CACzC,8BAA8B,CAC/B;;IAGH,IAAI,CAACC,SAAS,GAAGR,iBAAiB,CAACS,aAAa,CAAC,KAAK,CAAC,CAACC,GAAG;IAC3DV,iBAAiB,CAACM,SAAS,CAACK,GAAG,CAAC,8BAA8B,CAAC;IAC/D,IAAI,CAACN,qBAAqB,GAAGL,iBAAiB;EAChD;EAEA;;;;;;EAMAlC,IAAI,CAACuB,KAAU;IACb,MAAMuB,gBAAgB,GAAGvB,KAAK,CAACE,MAAM,CAACsB,KAAK;IAC3C,IAAI,CAACD,gBAAgB,GAAGA,gBAAgB;IACxC,IAAI,CAACE,eAAe,GAAG,CAAC;IACxB,IAAI,CAAC9D,cAAc,CAChBQ,wBAAwB,CAACoD,gBAAgB,CAAC,CAC1CnD,SAAS,CAAEsD,iBAAiB,IAAI;MAC/B,IAAI,CAACA,iBAAiB,GAAGA,iBAAiB;IAC5C,CAAC,CAAC;EACN;EAEA;;;;;;EAMAC,SAAS,CAACC,QAAQ;IAChBA,QAAQ,CAACC,YAAY,GAAG,CAACD,QAAQ,CAACC,YAAY;IAE9C,IAAID,QAAQ,CAACC,YAAY,EAAE;MACzB,IAAI,CAAChE,YAAY,CAACiE,IAAI,CAACF,QAAQ,CAAC;KACjC,MAAM;MACL,MAAMhD,KAAK,GAAG,IAAI,CAACf,YAAY,CAACkE,SAAS,CACtCC,CAAC,IAAKA,CAAC,CAACC,cAAc,KAAKL,QAAQ,CAACM,aAAa,CACnD;MACD,IAAI,CAACrE,YAAY,CAACsE,MAAM,CAACvD,KAAK,EAAE,CAAC,CAAC;;EAEtC;EACA;;;;;EAKAwD,WAAW,CAACC,QAAa,EAAEC,QAAsB;IAC/C,MAAMC,uBAAuB,GAAG,IAAI,CAAC1E,YAAY,CAAC2E,IAAI,CACnDR,CAAC,IAAKA,CAAC,CAACC,cAAc,KAAKK,QAAQ,CAACL,cAAc,CACpD;IACD,IAAI,OAAOI,QAAQ,KAAK,QAAQ,EAAE;MAChCC,QAAQ,CAACD,QAAQ,GAAGA,QAAQ;;EAEhC;EAEA;;;EAGAI,YAAY;IACV,IAAI,CAACC,WAAW,GAAG,IAAI;IACvB,IAAI,CAACC,aAAa,EAAE;EACtB;EAEAC,mBAAmB;IACjB,IAAI,CAACnB,eAAe,IAAI,CAAC;EAC3B;EAEA;;;;;;EAMAoB,cAAc,CAACC,IAA2C;IACxD,MAAMrE,IAAI,GAAG,IAAI,CAACX,KAAK,CAACuB,MAAM,GAAG,CAAC;IAElC0D,OAAO,CAACC,GAAG,CAACvE,IAAI,CAAC;IAEjB,IAAI,CAACX,KAAK,CAACgE,IAAI,CAAC,IAAIxE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAEmB,IAAI,EAAEqE,IAAI,CAACG,WAAW,EAAEH,IAAI,CAACtC,IAAI,CAAC,CAAC;EAC3E;EAEA;;;EAGA0C,WAAW;IACT,IAAIC,MAAM,GAAG,IAAI5F,cAAc,CAC7B,IAAI,EACJ,IAAI,CAACS,OAAO,CAACoF,UAAU,EACvB,IAAI,CAACH,WAAW,EAChB,IAAI,CAACI,MAAM,EACX,IAAI,CAAC7C,IAAI,EACT,IAAI,CAAC8C,MAAM,EACX,IAAI,CAACnC,SAAS,EACd,IAAI,CAACrB,SAAS,EACd,IAAI,CAACyD,eAAe,EACpB,IAAI,CAACC,UAAU,EACf,IAAI,CAAC3F,YAAY,EACjB,IAAI,CAACC,KAAK,CACX;IAED,IAAI,CAACH,cAAc,CAACuF,WAAW,CAACC,MAAM,CAAC,CAAC/E,SAAS,CAC9CqF,QAAQ,IAAM,IAAI,CAACC,mBAAmB,GAAG,IAAK,EAE9CC,KAAwB,IAAI;MAC3B,IAAIA,KAAK,CAACA,KAAK,YAAYC,UAAU,EAAE;QACrC,IAAI,CAACF,mBAAmB,GAAG,KAAK;OACjC,MAAM;QACL,IAAI,CAACA,mBAAmB,GAAG,KAAK;;IAEpC,CAAC,CACF;IACDG,KAAK,CAAC,8BAA8B,CAAC;IACrC,IAAI,CAACjG,MAAM,CAACkG,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE;MAAE5F,KAAK,EAAE;QAAEF,OAAO,EAAE,IAAI,CAACA;MAAO;IAAE,CAAE,CAAC;EAClE;;AAtTWP,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAsG;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MClBjC3G,8BAAuE;MACnCA,yBAAsD;MAAAA,iBAAI;MAE9FA,+BAAoC;MAGmCA,iCAAiB;MAAAA,iBAAQ;MAC5FA,gCACsC;MADkCA;QAAA;MAAA,EAAkB;QAAA,OAC9E4G,0BAAsB;MAAA,EADwD;MAA1F5G,iBACsC;MAGxCA,8BAAkB;MACqDA,4BAAM;MAAAA,iBAAQ;MACnFA,iCACwE;MAAvBA;QAAA;MAAA,EAAoB;MADrEA,iBACwE;MAG1EA,+BAAkB;MAC0DA,iCAAW;MAAAA,iBAAQ;MAC7FA,kCAC2E;MAA5BA;QAAA;MAAA,EAAyB;MADxEA,iBAC2E;MAG7EA,gCAA8B;MAC+CA,+BAAS;MAAAA,iBAAQ;MAC5FA,gCAA+E;MAC/BA;QAAA,OAAS4G,8BAA0B;MAAA,EAAC;MAChF5G,2BAA2F;MAC7FA,iBAAS;MACTA,mCAAmF;MAArCA;QAAA,OAAS4G,8BAA0B;MAAA,EAAC;MAChF5G,2BAA8F;MAChGA,iBAAS;MACTA,mCAAmF;MAArCA;QAAA,OAAS4G,8BAA0B;MAAA,EAAC;MAChF5G,2BAAiG;MACnGA,iBAAS;MACTA,mCAAmF;MAArCA;QAAA,OAAS4G,8BAA0B;MAAA,EAAC;MAChF5G,2BAA6F;MAC/FA,iBAAS;MACTA,mCAAmF;MAArCA;QAAA,OAAS4G,8BAA0B;MAAA,EAAC;MAChF5G,2BAA0F;MAC5FA,iBAAS;MACTA,mCAAmF;MAArCA;QAAA,OAAS4G,8BAA0B;MAAA,EAAC;MAChF5G,2BAA+F;MACjGA,iBAAS;MACTA,mCAAmF;MAArCA;QAAA,OAAS4G,8BAA0B;MAAA,EAAC;MAChF5G,2BAAyF;MAC3FA,iBAAS;MACTA,mCAAmF;MAArCA;QAAA,OAAS4G,8BAA0B;MAAA,EAAC;MAChF5G,2BACkB;MACpBA,iBAAS;MAIbA,gCAAiB;MAEkEA,2BAAU;MAAAA,iBAAQ;MACjGA,kCACmF;MAA3BA;QAAA;MAAA,EAAwB;MADhFA,iBACmF;MAGrFA,gCAAiB;MACyDA,2CAAqB;MAAAA,iBAAQ;MACrGA,kCAC8C;MAAvBA;QAAA;MAAA,EAAoB;MAD3CA,iBAC8C;MAIlDA,gCAAiB;MAEgBA,6BAAY;MAAAA,iBAAQ;MAEnDA,gCAAiB;MAEwBA;QAAA,OAAU4G,gBAAY;MAAA,EAAC;MAC5D5G,mCAAiB;MAAAA,kDAAiC;MAAAA,iBAAS;MAC3DA,8EAES;MACXA,iBAAS;MAETA,wEAcM;MACRA,iBAAM;MAENA,gCAA8D;MAChDA,4CAA2B;MAAAA,iBAAS;MAChDA,2BAAI;MACFA,sEAEK;MACPA,iBAAK;MAGTA,sBAAM;MAGNA,gCAA0B;MACQA;QAAA,OAAS4G,kBAAc;MAAA,EAAC;MACtD5G,mCACF;MAAAA,iBAAS;MACTA,yEAYM;MACNA,0FAEe;MACjBA,iBAAM;MAENA,sBAAM;MAGNA,mCAAsE;MAAxBA;QAAA,OAAS4G,iBAAa;MAAA,EAAC;MACnE5G,yBACF;MAAAA,iBAAS;;;MAlIiEA,eAAkB;MAAlBA,kCAAkB;MAOzCA,eAAoB;MAApBA,oCAAoB;MAMtBA,eAAyB;MAAzBA,yCAAyB;MAsCdA,gBAAwB;MAAxBA,wCAAwB;MAMzDA,eAAoB;MAApBA,oCAAoB;MAYhBA,eAAc;MAAdA,yCAAc;MAKhBA,eAAsB;MAAtBA,2CAAsB;MAoBnBA,eAAe;MAAfA,0CAAe;MAavBA,eAAU;MAAVA,mCAAU;MAajBA,eAAiB;MAAjBA,sCAAiB","names":["Pasos","RecetasRequest","i0","SubirRecetaComponent","constructor","recetasService","router","ingredientes","pasos","ngOnInit","usuario","history","state","obtenerTodosIngredientes","subscribe","ingredientesMostrar","tipos","map","ingrediente","tipo","tiposUnicos","filter","index","indexOf","fechaActual","Date","anyo","getFullYear","toString","mes","getMonth","length","dia","getDate","hora","getHours","minutos","getMinutes","segundos","getSeconds","fechaAlta","onFileSelected","event","file","target","files","reader","FileReader","readAsDataURL","onload","foto","result","capturarCategorias","botonSeleccionado","currentTarget","botones","document","querySelectorAll","categoriaSeleccionada","classList","remove","categoria","querySelector","alt","add","tipoSeleccionado","value","numIngrAMostrar","ingredientesXTipo","ingSelect","ingXtipo","seleccionado","push","findIndex","i","idIngredientes","idIngrediente","splice","setCantidad","cantidad","ingXTipo","ingredienteseleccionado","find","mostrarPasos","mostrarPaso","contadorPasos","mostrarIngredientes","onPasoAgregado","paso","console","log","descripcion","subirReceta","receta","idUsuarios","tiempo","titulo","valoracionMedia","comensales","response","subidaCorrectamente","error","ErrorEvent","alert","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\L\\Desktop\\helpcook-master\\helpcook-master\\src\\app\\pages\\subir-receta\\subir-receta.component.ts","C:\\Users\\L\\Desktop\\helpcook-master\\helpcook-master\\src\\app\\pages\\subir-receta\\subir-receta.component.html"],"sourcesContent":["import { Component, EventEmitter } from '@angular/core';\nimport {  Router } from '@angular/router';\nimport { recetasService } from '../mostrar-recetas/recetasService.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Ingredientes } from 'src/app/Ingredientes.model';\nimport { Pasos } from 'src/app/Pasos.model';\nimport { RecetasRequest } from 'src/app/RecetasRequest.model';\nimport { Usuarios } from 'src/app/Usuarios.model';\n\n/**\n * Componente para crear una receta\n *\n * Se creará una receta con los datos introducidos por el usuario\n */\n@Component({\n  selector: 'app-subir-receta',\n  templateUrl: './subir-receta.component.html',\n  styleUrls: ['./subir-receta.component.css'],\n})\nexport class SubirRecetaComponent {\n  /**\n   * Variable para almacenar el Usuario que sube la receta\n   */\n  usuario: Usuarios;\n\n  /**\n   * Variable para almacenar la descripcion de la receta\n   */\n  descripcion: string;\n\n  /**\n   * Variable para alamacenar el tiempo de preparación de la receta\n   */\n  tiempo: number;\n\n  /**\n   * Variable para almacenar la foto de la receta\n   */\n  foto: string;\n\n  /**\n   * Variable para almacenar el titulo de la receta\n   */\n  titulo: string;\n\n  /**\n   * Variable para almacenar la categoría de la receta\n   */\n  categoria: string;\n\n  /**\n   * Variable para capturar la fecha en que se está subiendo la receta\n   */\n  fechaAlta: Date;\n\n  /**\n   * Variable para saber la valoración media de la receta, como está recien subida siempre valdrá 0\n   */\n  valoracionMedia: number = 0;\n\n  /**\n   * Variable para almacenar para cuantos comensales es la receta\n   */\n  comensales: number;\n\n  /**\n   * Array para almacenar todos los pasos\n   */\n  pasos: Pasos[];\n\n  /**\n   * Variable para mostrar el div de la inserción del paso\n   */\n  mostrarPaso: boolean = false;\n\n  /**\n   * Variable para almacenar el número de pasos insertados\n   */\n  contadorPasos: number = 0;\n\n  /**\n   * Array para recuperar todos los ingredientes de la base de datos\n   */\n  ingredientesMostrar: Ingredientes[];\n\n  /**\n   * Variable para recuperar y poder mostrar los ingredientes por tipo\n   */\n  ingredientesXTipo: Ingredientes[];\n\n  /**\n   * Array para mostrar los tipos de ingredientes que existen\n   */\n  tiposUnicos: string[] = [];\n\n  /**\n   * Variable para almacenar la selección del tipo de ingrediente\n   */\n  tipoSeleccionado: string;\n\n  /**\n   * Array que contendrá los ingredientes contendrá la receta\n   */\n  ingredientes: Ingredientes[];\n\n  /**\n   * Variable para controlar los ingredeinets que se muestran\n   */\n  numIngrAMostrar: number = 5;\n\n  /**\n   * Variable para mostrar si la receta se ha agregado a la base de datos\n   */\n  subidaCorrectamente: boolean;\n\n  /**\n   * Variable para almacenar la categoria de la receta seleccionada por el usuario\n   */\n  categoriaSeleccionada: any = null;\n\n  /**\n   * Constructor de la clase donde donde Injectamos los servicios necesarios\n   * @param router Routing para poder recibir el Usuario que va a subir la receta\n   * @param recetasService Servicio necesario para la optención de los datos de las recetas y los ingredientes\n   */\n  constructor(\n    private recetasService: recetasService,\n    private router: Router\n  ) {\n    this.ingredientes = [];\n    this.pasos = [];\n  }\n\n  /**\n   * Método que se carga cuando inicia la página\n   *\n   * Recuperamos el id del usuario de la ruta y se lo asignamos a nuestra variable idUsuario\n   *\n   * Obtenemos todos los ingredientes de la base de datos mandando la consulta a nuestro servicio,\n   * recorremos el array de ingredientes para optener los tipos de éstos y  guardamos los tipos no repetidos en nuestra variable tipos únicos.\n   *\n   * Creamos una variable Date para almacenar la fecha actual cuando ingresa en la página, recogemos el año, mes y dia de esa variable,\n   * y se la asignamos a la variable que vamos a mandar a la receta en el formato que necesitamos\n   */\n  ngOnInit(): void {\n    this.usuario = history.state.usuario;\n\n    this.recetasService\n      .obtenerTodosIngredientes(null)\n      .subscribe((ingredientesMostrar) => {\n        this.ingredientesMostrar = ingredientesMostrar;\n\n        const tipos = this.ingredientesMostrar.map(\n          (ingrediente) => ingrediente.tipo\n        );\n        this.tiposUnicos = tipos.filter(\n          (tipo, index) => tipos.indexOf(tipo) === index\n        );\n      });\n\n    const fechaActual = new Date();\n    const anyo = fechaActual.getFullYear().toString();\n    let mes = (fechaActual.getMonth() + 1).toString();\n    if (mes.length === 1) {\n      mes = '0' + mes;\n    }\n    let dia = fechaActual.getDate().toString();\n    if (dia.length === 1) {\n      dia = '0' + dia;\n    }\n    let hora = fechaActual.getHours().toString();\n    if (hora.length === 1) {\n      hora = '0' + hora;\n    }\n    let minutos = fechaActual.getMinutes().toString();\n    if (minutos.length === 1) {\n      minutos = '0' + minutos;\n    }\n    let segundos = fechaActual.getSeconds().toString();\n    if (segundos.length === 1) {\n      segundos = '0' + segundos;\n    }\n\n    this.fechaAlta = new Date(`${anyo}-${mes}-${dia}T${hora}:${minutos}:${segundos}`);\n  \n  }\n\n  /**\n   * Método para pasar la foto de la receta a Base 64\n   * y poder guardarlas como string\n   */\n  onFileSelected(event: any) {\n    const file = event.target.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        this.foto = reader.result as string;\n      };\n    }\n  }\n\n  /**\n   * Método para capturar la categoría de la receta y cambiar el color de la categoria seleccionada\n   */\n  capturarCategorias(event: any) {\n    const botonSeleccionado = event.currentTarget;\n    const botones = document.querySelectorAll('.btn-iconosbarra');\n\n    // Si hay un botón seleccionado, lo deseleccionamos\n    if (this.categoriaSeleccionada) {\n      this.categoriaSeleccionada.classList.remove(\n        'btn-iconosbarra-seleccionado'\n      );\n    }\n\n    this.categoria = botonSeleccionado.querySelector('img').alt;\n    botonSeleccionado.classList.add('btn-iconosbarra-seleccionado');\n    this.categoriaSeleccionada = botonSeleccionado;\n  }\n\n  /**\n   * Método para recuperar los ingredientes por el tipo que elija el Usuario\n   * recuperamos la seleccion y la mandamos al servicio pasandole el tipo de los ingredientes que queremos recuperar,\n   * obteniendo un array de ingredientes del tipo seleccionado\n   * @param event Recibimos la selección del usuario\n   */\n  tipo(event: any) {\n    const tipoSeleccionado = event.target.value;\n    this.tipoSeleccionado = tipoSeleccionado;\n    this.numIngrAMostrar = 5;\n    this.recetasService\n      .obtenerTodosIngredientes(tipoSeleccionado)\n      .subscribe((ingredientesXTipo) => {\n        this.ingredientesXTipo = ingredientesXTipo;\n      });\n  }\n\n  /**\n   * Método para mostar o no el input de cantidad del ingrediente seleccionado,\n   * si el ingrediente se selecciona lo añade al array de ingredientes para asociarlo a la receta,\n   * si lo deselecciona lo borra del array\n   * @param ingXtipo\n   */\n  ingSelect(ingXtipo) {\n    ingXtipo.seleccionado = !ingXtipo.seleccionado;\n\n    if (ingXtipo.seleccionado) {\n      this.ingredientes.push(ingXtipo);\n    } else {\n      const index = this.ingredientes.findIndex(\n        (i) => i.idIngredientes === ingXtipo.idIngrediente\n      );\n      this.ingredientes.splice(index, 1);\n    }\n  }\n  /**\n   * Método para asignar la cantidad al ingrediente seleccionado\n   * @param cantidad. Recibe la cantidad ingresada por el usuario\n   * @param ingXTipo. Recibe el ingrediente para asociarle la cantidad\n   */\n  setCantidad(cantidad: any, ingXTipo: Ingredientes) {\n    const ingredienteseleccionado = this.ingredientes.find(\n      (i) => i.idIngredientes === ingXTipo.idIngredientes\n    );\n    if (typeof cantidad === 'string') {\n      ingXTipo.cantidad = cantidad;\n    }\n  }\n\n  /**\n   * Método para mostrar el div del paso cuando se le de al botón y contabilizar los pasos agregados\n   */\n  mostrarPasos() {\n    this.mostrarPaso = true;\n    this.contadorPasos++;\n  }\n\n  mostrarIngredientes(){\n    this.numIngrAMostrar += 5;\n  }\n\n  /**\n   * Método que se recibe del componente hijo el paso con los datos capturados\n   *\n   * para añadir al array de pasos un nuevo paso con los datos recibidos\n   * @param paso. Recibimos un array con los datos que nos interesan para creación del paso.\n   */\n  onPasoAgregado(paso: { descripcion: string; foto: string }) {\n    const tipo = this.pasos.length + 1;\n\n    console.log(tipo);\n\n    this.pasos.push(new Pasos(null, null, tipo, paso.descripcion, paso.foto));\n  }\n\n  /**\n   * Método para mandar al servicio los datos rellenados por el usuario y poder guardar la receta\n   */\n  subirReceta() {\n    let receta = new RecetasRequest(\n      null,\n      this.usuario.idUsuarios,\n      this.descripcion,\n      this.tiempo,\n      this.foto,\n      this.titulo,\n      this.categoria,\n      this.fechaAlta,\n      this.valoracionMedia,\n      this.comensales,\n      this.ingredientes,\n      this.pasos\n    );\n\n    this.recetasService.subirReceta(receta).subscribe(\n      (response) => (this.subidaCorrectamente = true),\n\n      (error: HttpErrorResponse) => {\n        if (error.error instanceof ErrorEvent) {\n          this.subidaCorrectamente = false;\n        } else {\n          this.subidaCorrectamente = false;\n        }\n      }\n    );\n    alert('Receta subida correctamente.');\n    this.router.navigate([''], { state: { usuario: this.usuario } });\n  }\n}\n","<!-- Seccion logo -->\n<div class=\"text-center\" style=\"margin-top: 30px; margin-bottom: 30px\">\n  <a class=\"nav-link\" routerLink=\"\"><img src=\"/assets/img/logo.png\" class=\"w-25\" alt=\"\" /></a>\n</div>\n<form enctype=\"multipart/form-data\">\n  <!-- Imagen -->\n  <div class=\"mb-3\">\n    <label class=\"form-label fw-bold text-center mt-3\" for=\"InputFoto\">Adjunta la imagen</label>\n    <input class=\"form-control fs-5\" type=\"file\" name=\"foto\" id=\"InputFoto\" [(ngModel)]=\"foto\" required\n      (change)=\"onFileSelected($event)\" />\n  </div>\n  <!-- Titulo receta -->\n  <div class=\"mb-3\">\n    <label class=\"form-label fw-bold text-center mt-3\" for=\"InputTitulo\">Título</label>\n    <input class=\"form-control fs-5\" type=\"text\" name=\"titulo\" id=\"InputTitulo\"\n      placeholder=\"Introduce el título de la receta\" [(ngModel)]=\"titulo\" />\n  </div>\n  <!-- Descripción receta -->\n  <div class=\"mb-3\">\n    <label class=\"form-label fw-bold text-center mt-3\" for=\"InputDescripcion\">Descripción</label>\n    <input class=\"form-control fs-5\" type=\"text\" name=\"descripcion\" id=\"InputDescripcion\"\n      placeholder=\"Breve descripción de tu receta\" [(ngModel)]=\"descripcion\" />\n  </div>\n  <!-- Barra categorías -->\n  <div class=\"text-center mt-5\">\n    <label class=\"form-label fw-bold text-center mt-3\" for=\"FormControlImput1\">Categoría</label>\n    <div class=\"btn-group barracategorias\" role=\"group\" aria-label=\"Basic example\">\n      <button type=\"button\" class=\"btn iconosbarra\" (click)=\"capturarCategorias($event)\">\n        <img src=\"/assets/iconos/carnes.png\" width=\"40px\" style=\"margin-left: 30px\" alt=\"Carnes\" />\n      </button>\n      <button type=\"button\" class=\"btn iconosbarra\" (click)=\"capturarCategorias($event)\">\n        <img src=\"/assets/iconos/pescado.png\" width=\"40px\" style=\"margin-left: 30px\" alt=\"Pescados\" />\n      </button>\n      <button type=\"button\" class=\"btn iconosbarra\" (click)=\"capturarCategorias($event)\">\n        <img src=\"/assets/iconos/legumbres.png\" width=\"40px\" style=\"margin-left: 30px\" alt=\"Legumbres\" />\n      </button>\n      <button type=\"button\" class=\"btn iconosbarra\" (click)=\"capturarCategorias($event)\">\n        <img src=\"/assets/iconos/arroces.png\" width=\"40px\" style=\"margin-left: 30px\" alt=\"Arroces\" />\n      </button>\n      <button type=\"button\" class=\"btn iconosbarra\" (click)=\"capturarCategorias($event)\">\n        <img src=\"/assets/iconos/pasta.png\" width=\"40px\" style=\"margin-left: 30px\" alt=\"Pastas\" />\n      </button>\n      <button type=\"button\" class=\"btn iconosbarra\" (click)=\"capturarCategorias($event)\">\n        <img src=\"/assets/iconos/verduras.png\" width=\"40px\" style=\"margin-left: 30px\" alt=\"Verduras\" />\n      </button>\n      <button type=\"button\" class=\"btn iconosbarra\" (click)=\"capturarCategorias($event)\">\n        <img src=\"/assets/iconos/setas.png\" width=\"40px\" style=\"margin-left: 30px\" alt=\"Setas\" />\n      </button>\n      <button type=\"button\" class=\"btn iconosbarra\" (click)=\"capturarCategorias($event)\">\n        <img src=\"/assets/iconos/postre1.png\" width=\"40px\" style=\"margin-left: 30px; margin-right: 30px\"\n          alt=\"Postres\" />\n      </button>\n    </div>\n  </div>\n  <!-- Comensales -->\n  <div class=\"row\">\n    <div class=\"col\">\n      <label class=\"form-label custom-label fw-bold mt-5 ms-5\" for=\"InputComensales\">Comensales</label>\n      <input class=\"form-control fs-5\" type=\"number\" name=\"comensales\" id=\"InputComensales\"\n        placeholder=\"¿Cuantas personas?\" style=\"width: 200px\" [(ngModel)]=\"comensales\" />\n    </div>\n    <!-- Tiempo de preparación -->\n    <div class=\"col\">\n      <label class=\"form-label custom-label fw-bold mt-5\" for=\"idPreparacion\">Tiempo de preparación</label>\n      <input class=\"form-control fs-5\" type=\"number\" name=\"preparacion\" id=\"idPreparacion\" placeholder=\"Tiempo en min.\"\n        style=\"width: 200px\" [(ngModel)]=\"tiempo\" />\n    </div>\n  </div>\n  <!--Ingredientes-->\n  <div class=\"row\">\n    <label class=\"form-label custom-label fw-bold mt-5  text-center\" for=\"InputIngredientesTipo\"\n      style=\"margin-bottom: 30px;\">Ingredientes</label>\n    <!-- Selección tipo Ingredientes --->\n    <div class=\"col\">\n      <select class=\"form-select form-select fw-bold mt-2\" for=\"InputIngredientesTipo\"\n        aria-label=\".form-select-lg example\" (change)=\"tipo($event)\">\n        <option value=\"\">Selecciona el tipo de ingrediente</option>\n        <option *ngFor=\"let tipo of tiposUnicos\" [value]=\"tipo\">\n          {{ tipo }}\n        </option>\n      </select>\n      <!-- Selección Ingredientes y su cantidad--->\n      <div class=\"form-check\" *ngIf=\"tipoSeleccionado\" style=\"margin-top: 15px\">\n        <div *ngFor=\"let ingXTipo of ingredientesXTipo | slice:0:numIngrAMostrar \">\n          <input class=\"form-check-input\" type=\"checkbox\" id=\"{{ ingXTipo.idIngredientes }}\"\n            [checked]=\"ingXTipo.seleccionado\" value=\"{{ ingXTipo.idIngredientes }}\" (change)=\"ingSelect(ingXTipo)\" />{{\n          ingXTipo.nombre }}\n          <input *ngIf=\"ingXTipo.seleccionado && ingredientesXTipo.length > 0\" class=\"form-control\" type=\"text\" name=\"ingr{{ ingXTipo.idIngredientes }}\"\n            id=\"cantidad{{ ingXTipo.idIngredientes }}\" placeholder=\"Cantidad\" [value]=\"ingXTipo.cantidad\"\n            (input)=\"setCantidad($event.target['value'], ingXTipo)\" />\n        </div>\n        <span\n        class=\"mostrar-mas\"\n        (click)=\"mostrarIngredientes()\"\n        >Mostrar más</span\n      >\n      </div>\n    </div>\n    <!--Panel que muestra los ingredientes seleccionados-->\n    <div class=\"col\" style=\"margin-top: 10px; margin-left: 120px\">\n      <h5><strong>Ingredientes seleccionados:</strong></h5>\n      <ul>\n        <li *ngFor=\"let ingSelect of ingredientes\">\n          {{ ingSelect.nombre }} - {{ ingSelect.cantidad }}\n        </li>\n      </ul>\n    </div>\n  </div>\n  <br />\n  <br />\n  <!-- Pasos -->\n  <div id=\"pasos-container\">\n    <button class=\"btn btn-primary\" (click)=\"mostrarPasos()\">\n      Agrega los Pasos\n    </button>\n    <div *ngFor=\"let paso of pasos; let i = index\" style=\"margin-top: 40px\">\n      <h5>\n        <strong>Paso {{ i + 1 }}</strong>\n      </h5>\n      <div class=\"row\" style=\"margin-top: 25px;\">\n        <div class=\"col descripcion rounded\">\n          <h6>{{ paso.descripcion }}</h6>\n        </div>\n        <div class=\"col\">\n          <img [src]=\"paso.foto\" class=\"rounded\" width=\"300px\" alt=\"Foto de paso {{ i + 1 }}\" />\n        </div>\n      </div>\n    </div>\n    <ng-container *ngIf=\"mostrarPaso\">\n      <app-captura-paso [contadorPasos]=\"contadorPasos\" (pasoAgregado)=\"onPasoAgregado($event)\"></app-captura-paso>\n    </ng-container>\n  </div>\n\n  <br />\n  <br />\n  <!-- Botón enviar -->\n  <button type=\"submit\" class=\"btn btn-primary\" (click)=\"subirReceta()\">\n    Enviar\n  </button>\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}