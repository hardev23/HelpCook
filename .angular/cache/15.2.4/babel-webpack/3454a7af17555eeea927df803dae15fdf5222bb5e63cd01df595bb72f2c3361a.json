{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../registro/registro-service.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1, \"No tienes acceso. Necesitas iniciar sesi\\u00F3n\");\n    i0.ɵɵelementEnd();\n  }\n}\n/**\r\n * Componente para el acceso del Usuario a su cuenta\r\n *\r\n * se comprobarán los datos y si coinciden se dará acceso a su perfil,\r\n *\r\n * en caso contrario se muestra un mensaje de error\r\n */\nexport class LoginComponent {\n  /**\r\n   * Injectamos los servicios\r\n   * @param router Para el envio del Usuario a otras páginas\r\n   * @param registroService Servicio para hacer la consulta al backend\r\n   */\n  constructor(router, registroService) {\n    this.router = router;\n    this.registroService = registroService;\n    this.validado = false;\n  }\n  /**\r\n   * Método que se ejecuta cuando se inicia la página\r\n   */\n  ngOnInit() {}\n  /**\r\n   * Método para registrar al usuario\r\n   *\r\n   * le mandamos el email y la contraseña y si existe y coincide en el front\r\n   *\r\n   * nos devuelve un Objeto del Usuario con todos sus datos que mandamos a la página de perfil\r\n   */\n  login() {\n    this.registroService.login(this.email, this.contrasenia).subscribe(usuario => {\n      this.usuario = usuario;\n      this.validado = false;\n      this.router.navigate(['/perfil'], {\n        state: {\n          usuario: usuario\n        }\n      }); // Redireccionar a la página de perfil\n    }, error => {\n      console.log(error);\n      this.validado = true;\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.RegistroService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 21,\n  vars: 3,\n  consts: [[1, \"text-center\", 2, \"margin-top\", \"30px\"], [\"routerLink\", \"\", 1, \"nav-link\"], [\"src\", \"/assets/img/logo.png\", \"alt\", \"\", 1, \"w-25\"], [1, \"form-group\"], [\"for\", \"InputEmail1\"], [\"type\", \"email\", \"name\", \"email\", \"id\", \"InputEmail1\", \"placeholder\", \"Correo electr\\u00F3nico\", 1, \"form-control\", \"method='POST'\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"InputPassword1\"], [\"type\", \"password\", \"name\", \"password\", \"id\", \"InputPassword1\", \"placeholder\", \"Contrase\\u00F1a\", 1, \"form-control\", \"method='POST'\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"p-texto\"], [1, \"p-link\"], [\"href\", \"/registro\", 1, \"link-registro\"], [1, \"alert\", \"alert-danger\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"a\", 1);\n      i0.ɵɵelement(2, \"img\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"form\")(4, \"div\", 3)(5, \"label\", 4);\n      i0.ɵɵtext(6, \"Correo electr\\u00F3nico: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\", 6);\n      i0.ɵɵtext(10, \"Contrase\\u00F1a: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.contrasenia = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(12, \"br\");\n      i0.ɵɵelementStart(13, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_13_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵtext(14, \"Iniciar sesi\\u00F3n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(15, LoginComponent_div_15_Template, 2, 0, \"div\", 9);\n      i0.ɵɵelementStart(16, \"p\", 10);\n      i0.ɵɵtext(17, \"Si a\\u00FAn no tienes una cuenta puedes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"p\", 11)(19, \"a\", 12);\n      i0.ɵɵtext(20, \"registrarte aqu\\u00ED\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.contrasenia);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.validado);\n    }\n  },\n  dependencies: [i3.NgIf, i1.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\"body[_ngcontent-%COMP%] {\\n    font-family: Arial, sans-serif;\\n}\\n\\nh1[_ngcontent-%COMP%] {\\n    color: #3F2811;\\n    text-align: center;\\n}\\n\\nform[_ngcontent-%COMP%] {\\n    background-color: #D4D0C4;\\n    padding: 20px;\\n    border-radius: 10px;\\n    width: 400px;\\n    margin: 0 auto;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n    display: block;\\n    margin-bottom: 10px;\\n}\\n\\ninput[type=\\\"text\\\"][_ngcontent-%COMP%], input[type=\\\"email\\\"][_ngcontent-%COMP%], input[type=\\\"password\\\"][_ngcontent-%COMP%] {\\n    width: 100%;\\n    padding: 10px;\\n    margin-bottom: 20px;\\n    border-radius: 5px;\\n    border: none;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n    background-color: #8A9A8A;\\n    color: white;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 33.3%;\\n    border: none;\\n    border-radius: 5px;\\n    padding: 5px;\\n    cursor: pointer;\\n    font-size: 16px;\\n    margin-left: 50%;\\n    transform: translateX(-50%);\\n}\\n\\n.p-texto[_ngcontent-%COMP%] {\\n    margin-top: 20px;\\n    text-align: center;\\n}\\n\\n.p-link[_ngcontent-%COMP%]{\\n    margin-top:-20px;\\n    text-align: center;\\n}\\n\\n.link-registro[_ngcontent-%COMP%] {\\n    color: #3F2811;\\n    font-weight: bold;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLDhCQUE4QjtBQUNsQzs7QUFFQTtJQUNJLGNBQWM7SUFDZCxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSx5QkFBeUI7SUFDekIsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixZQUFZO0lBQ1osY0FBYztBQUNsQjs7QUFFQTtJQUNJLGNBQWM7SUFDZCxtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osYUFBYTtJQUNiLG1CQUFtQjtJQUNuQix1QkFBdUI7SUFDdkIsWUFBWTtJQUNaLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLGVBQWU7SUFDZixlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLDJCQUEyQjtBQUMvQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksY0FBYztJQUNkLGlCQUFpQjtBQUNyQiIsInNvdXJjZXNDb250ZW50IjpbImJvZHkge1xuICAgIGZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjtcbn1cblxuaDEge1xuICAgIGNvbG9yOiAjM0YyODExO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuZm9ybSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0Q0RDBDNDtcbiAgICBwYWRkaW5nOiAyMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgd2lkdGg6IDQwMHB4O1xuICAgIG1hcmdpbjogMCBhdXRvO1xufVxuXG5sYWJlbCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbn1cblxuaW5wdXRbdHlwZT1cInRleHRcIl0sIGlucHV0W3R5cGU9XCJlbWFpbFwiXSwgaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIGJvcmRlcjogbm9uZTtcbn1cblxuYnV0dG9uIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjOEE5QThBO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgd2lkdGg6IDMzLjMlO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgcGFkZGluZzogNXB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgbWFyZ2luLWxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG59XG5cbi5wLXRleHRvIHtcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLnAtbGlua3tcbiAgICBtYXJnaW4tdG9wOi0yMHB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmxpbmstcmVnaXN0cm8ge1xuICAgIGNvbG9yOiAjM0YyODExO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAkBAA,+BAAiD;IAAAA,+DAA0C;IAAAA,iBAAM;;;ACXjG;;;;;;;AAYA,OAAM,MAAOC,cAAc;EAsBzB;;;;;EAKAC,YAAoBC,MAAc,EAAUC,eAAgC;IAAxD,WAAM,GAAND,MAAM;IAAkB,oBAAe,GAAfC,eAAe;IACzD,IAAI,CAACC,QAAQ,GAAG,KAAK;EACvB;EAEA;;;EAGAC,QAAQ,IAER;EAEA;;;;;;;EAOAC,KAAK;IACH,IAAI,CAACH,eAAe,CAACG,KAAK,CAAC,IAAI,CAACC,KAAK,EAAC,IAAI,CAACC,WAAW,CAAC,CAACC,SAAS,CAAEC,OAAO,IAAI;MAC5E,IAAI,CAACA,OAAO,GAAGA,OAAO;MACtB,IAAI,CAACN,QAAQ,GAAG,KAAK;MACrB,IAAI,CAACF,MAAM,CAACS,QAAQ,CAAC,CAAC,SAAS,CAAC,EAAC;QAACC,KAAK,EAAC;UAACF,OAAO,EAACA;QAAO;MAAC,CAAC,CAAC,CAAC,CAAC;IAC/D,CAAC,EAAGG,KAAK,IAAI;MACXC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,IAAI,CAACT,QAAQ,GAAG,IAAI;IAEtB,CAAC,CAAC;EACJ;;AAvDWJ,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDjB3BrB,8BAAkD;MACZA,yBAAsD;MAAAA,iBAAI;MAGhGA,4BAAM;MAE2BA,yCAAoB;MAAAA,iBAAQ;MACrDA,gCAA0I;MAAlFA;QAAA;MAAA,EAAmB;MAA3EA,iBAA0I;MAE9IA,8BAAwB;MACQA,kCAAY;MAAAA,iBAAQ;MAChDA,iCAAiJ;MAAvFA;QAAA;MAAA,EAAyB;MAAnFA,iBAAiJ;MAGzJA,sBAAK;MACLA,kCAAgE;MAAlBA;QAAA,OAASsB,WAAO;MAAA,EAAC;MAACtB,oCAAc;MAAAA,iBAAS;MACvFA,iEAAiG;MAE7FA,8BAAmB;MAAAA,wDAAkC;MAAAA,iBAAI;MACzDA,8BAAkB;MAA0CA,sCAAgB;MAAAA,iBAAI;;;MAZpBA,eAAmB;MAAnBA,mCAAmB;MAIjBA,eAAyB;MAAzBA,yCAAyB;MAKrFA,eAAc;MAAdA,mCAAc","names":["i0","LoginComponent","constructor","router","registroService","validado","ngOnInit","login","email","contrasenia","subscribe","usuario","navigate","state","error","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\L\\Desktop\\helpcook-master\\helpcook-master\\src\\app\\pages\\login\\login.component.html","C:\\Users\\L\\Desktop\\helpcook-master\\helpcook-master\\src\\app\\pages\\login\\login.component.ts"],"sourcesContent":["\n<!-- Seccion logo -->\n<div class=\"text-center\" style=\"margin-top: 30px\">\n    <a class=\"nav-link\" routerLink=\"\"><img src=\"/assets/img/logo.png\" class=\"w-25\" alt=\"\" /></a>\n  </div>\n  <!-- Formulario -->\n<form>\n    <div class=\"form-group\">\n        <label for=\"InputEmail1\">Correo electrónico: </label>\n        <input type=\"email\" class=\"form-control method='POST'\"  [(ngModel)]='email'name=\"email\" id=\"InputEmail1\" placeholder=\"Correo electrónico\">\n    </div>\n    <div class=\"form-group\">\n        <label for=\"InputPassword1\">Contraseña: </label>\n        <input type=\"password\" class=\"form-control method='POST'\" [(ngModel)]='contrasenia' name=\"password\" id=\"InputPassword1\" placeholder=\"Contraseña\">\n    </div>\n  \n<br/>\n<button type=\"submit\" class=\"btn btn-primary\" (click)=\"login()\">Iniciar sesión</button>\n<div *ngIf=\"validado\" class=\"alert alert-danger\">No tienes acceso. Necesitas iniciar sesión</div>\n  \n    <p class=\"p-texto\">Si aún no tienes una cuenta puedes</p>\n    <p class=\"p-link\"><a class=\"link-registro\" href=\"/registro\">registrarte aquí</a></p>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Usuarios } from 'src/app/Usuarios.model';\nimport { RegistroService } from '../registro/registro-service.service';\n\n/**\n * Componente para el acceso del Usuario a su cuenta\n * \n * se comprobarán los datos y si coinciden se dará acceso a su perfil,\n * \n * en caso contrario se muestra un mensaje de error\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit{\n\n  /**\n   * Variable para almacenar el email\n   */\n  email: string;\n\n  /**\n   * Variable para almacenar la contraseña\n   */\n  contrasenia: string;\n\n  /**\n   * Variable para almacenar el usuario que obtenemos de la base de datos\n   */\n  usuario:Usuarios;\n\n  /**\n   * Variable saber para la validación\n   */\n  validado:  boolean;\n  \n  /**\n   * Injectamos los servicios \n   * @param router Para el envio del Usuario a otras páginas\n   * @param registroService Servicio para hacer la consulta al backend\n   */\n  constructor(private router: Router, private registroService: RegistroService) {\n    this.validado = false;\n  }\n\n  /**\n   * Método que se ejecuta cuando se inicia la página\n   */\n  ngOnInit(): void {\n   \n  }\n    \n  /**\n   * Método para registrar al usuario\n   * \n   * le mandamos el email y la contraseña y si existe y coincide en el front\n   * \n   * nos devuelve un Objeto del Usuario con todos sus datos que mandamos a la página de perfil\n   */\n  login() {\n    this.registroService.login(this.email,this.contrasenia).subscribe((usuario) => {\n      this.usuario = usuario;\n      this.validado = false;\n      this.router.navigate(['/perfil'],{state:{usuario:usuario}}); // Redireccionar a la página de perfil\n    }, (error) => {\n      console.log(error);\n      this.validado = true;\n      \n    });\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}