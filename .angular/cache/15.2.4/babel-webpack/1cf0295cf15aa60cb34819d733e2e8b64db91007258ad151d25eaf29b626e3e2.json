{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n/**\r\n * Servicio que proporciona acceso a la API REST utilizando el HttpClient de Angular\r\n *\r\n * Utilizado para la obtencion de los ingredientes del componente NavBar\r\n */\nexport class NavbarService {\n  /**\r\n  * Constructor del servicio que inyecta el HttpClient de Angular.\r\n  * @param http. Cliente HTTP utilizado para realizar solicitudes a una API REST.\r\n  */\n  constructor(http) {\n    this.http = http;\n  }\n  /**\r\n   * Método para la conexión con el método del backend para recibir ingredientes del back,\r\n   * @param  {string} ingredientesAMostrar. Recibimos el valor para el filtro de buscar ingredientes en caso de necesitarlo\r\n   * @returns {Ingredientes} Devolvemos el array con los ingredientes\r\n   */\n  obtenerIngredientes(ingredientesAMostrar) {\n    let param = '';\n    if (ingredientesAMostrar != null) {\n      param += '?categoria=' + ingredientesAMostrar;\n    }\n    return this.http.get('http://localhost:8081/ingredientes?' + param);\n  }\n}\nNavbarService.ɵfac = function NavbarService_Factory(t) {\n  return new (t || NavbarService)(i0.ɵɵinject(i1.HttpClient));\n};\nNavbarService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: NavbarService,\n  factory: NavbarService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAKA;;;;;AAQA,OAAM,MAAOA,aAAa;EACxB;;;;EAIAC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAe;EAEvC;;;;;EAKAC,mBAAmB,CAACC,oBAA4B;IAC9C,IAAIC,KAAK,GAAG,EAAE;IAEd,IAAID,oBAAoB,IAAI,IAAI,EAAE;MAChCC,KAAK,IAAI,aAAa,GAAGD,oBAAoB;;IAG/C,OAAO,IAAI,CAACF,IAAI,CAACI,GAAG,CAAiB,qCAAqC,GAAGD,KAAK,CAAC;EACrF;;AApBWL,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAO,SAAbP,aAAa;EAAAQ,YAFZ;AAAM","names":["NavbarService","constructor","http","obtenerIngredientes","ingredientesAMostrar","param","get","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\L\\Desktop\\helpcook-master\\helpcook-master\\src\\app\\sharepage\\navbar\\navbar-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Ingredientes } from 'src/app/Ingredientes.model';\n\n\n/**\n * Servicio que proporciona acceso a la API REST utilizando el HttpClient de Angular\n * \n * Utilizado para la obtencion de los ingredientes del componente NavBar\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavbarService {\n  /**\n  * Constructor del servicio que inyecta el HttpClient de Angular.\n  * @param http. Cliente HTTP utilizado para realizar solicitudes a una API REST.\n  */\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Método para la conexión con el método del backend para recibir ingredientes del back,\n   * @param  {string} ingredientesAMostrar. Recibimos el valor para el filtro de buscar ingredientes en caso de necesitarlo\n   * @returns {Ingredientes} Devolvemos el array con los ingredientes\n   */\n  obtenerIngredientes(ingredientesAMostrar: string) {\n    let param = '';\n\n    if (ingredientesAMostrar != null) {\n      param += '?categoria=' + ingredientesAMostrar; \n    }\n\n    return this.http.get<Ingredientes[]>('http://localhost:8081/ingredientes?' + param);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}