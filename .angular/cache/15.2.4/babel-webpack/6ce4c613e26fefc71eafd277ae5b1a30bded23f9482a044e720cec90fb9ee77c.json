{"ast":null,"code":"import { Usuarios } from 'src/app/Usuarios.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./registro-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction RegistroComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \" Las contrase\\u00F1as no coinciden. \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\n/**\r\n * Componente para la página de registro\r\n *\r\n * Creará el usuario que se ha creado con los valores introducidos en el form\r\n */\nexport class RegistroComponent {\n  /**\r\n  *\r\n  * Injectamos los servicios para la conexión con el Backend y el routing con las demás páginas\r\n  * @param registSvc Servicio para hacer la consulta al backend\r\n  * @param router Para el envio del Usuario a otras páginas\r\n  */\n  constructor(registSvc, router) {\n    this.registSvc = registSvc;\n    this.router = router;\n    /**\r\n     * Variable para controlar que la petición de las contraseña coincidan\r\n     */\n    this.contraseniaCoincide = true;\n  }\n  /**\r\n   * Método que se varga cuando se inicializa la página\r\n   */\n  ngOnInit() {}\n  /**\r\n   * Método para pasar el archivo a Base 64 y poder guardarlo en la base de datos como un string\r\n   * @param event recibimos el archivo de la foto\r\n   */\n  onFileSelected(event) {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        this.foto = reader.result;\n      };\n    }\n  }\n  /**\r\n   * Método que se carga cuando el usuario pulsa el botón \"Registrarme\"\r\n   *\r\n   * Recogemos los valores que el usuario introduce en el formulario de registro y los asignamos al objeto usuario\r\n   *\r\n   * Llamamos al servicio de Registro para la conexión con el back y mostramos por la consola\r\n   * \"Se ha guardado el usuario: \" si el usuario se ha guardado correctamente o\r\n   * \"Error de red o error en el servidor\" si el usuario no se ha guardado correctamente dependiendo de donde proceda el error\r\n   */\n  addUserService() {\n    let usuario = new Usuarios(this.nick, this.contrasenia, this.nombre, this.apellido, this.email, this.foto);\n    this.registSvc.addNewUser(usuario).subscribe(response => {\n      if (response.exito) {\n        alert('Usuario registrado con éxito');\n        this.router.navigate(['/login']);\n      } else {\n        alert('Este correo electrónico ya está en uso. Inserte uno válido.');\n      }\n    });\n  }\n}\nRegistroComponent.ɵfac = function RegistroComponent_Factory(t) {\n  return new (t || RegistroComponent)(i0.ɵɵdirectiveInject(i1.RegistroService), i0.ɵɵdirectiveInject(i2.Router));\n};\nRegistroComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegistroComponent,\n  selectors: [[\"app-registro\"]],\n  decls: 53,\n  vars: 12,\n  consts: [[1, \"text-center\", 2, \"margin-top\", \"30px\"], [\"routerLink\", \"\", 1, \"nav-link\"], [\"src\", \"/assets/img/logo.png\", \"alt\", \"\", 1, \"w-25\"], [\"enctype\", \"multipart/form-data\"], [1, \"form-group\"], [\"for\", \"InputNombre\"], [\"type\", \"text\", \"name\", \"nombre\", \"id\", \"InputNombre\", \"placeholder\", \"Introduzca su nombre\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"InputApellidos\"], [\"type\", \"text\", \"name\", \"apellidos\", \"id\", \"InputApellidos\", \"placeholder\", \"Introduzca sus apellidos\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"InputNick\"], [\"type\", \"text\", \"name\", \"nick\", \"id\", \"InputNick\", \"placeholder\", \"Introduzca su nombre de usuario\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"InputContrasenia\"], [\"type\", \"email\", \"name\", \"email\", \"id\", \"InputContrasenia\", \"placeholder\", \"Introduzca un correo electr\\u00F3nico v\\u00E1lido\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"InputContrasenia1\"], [\"type\", \"password\", \"name\", \"contrasenia\", \"id\", \"InputContrasenia1\", \"placeholder\", \"Introduzca la contrase\\u00F1a\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"confirm-password\"], [\"type\", \"password\", \"name\", \"confirm-password\", \"placeholder\", \"Repita la contrase\\u00F1a\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"InputFoto\"], [\"type\", \"file\", \"name\", \"file\", \"id\", \"InputFoto\", \"aria-label\", \"file example\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [1, \"custom-control\", \"custom-checkbox\"], [\"type\", \"checkbox\", \"name\", \"privacity\", \"id\", \"customCheck1\", 1, \"custom-control-input\"], [\"for\", \"customCheck1\", \"required\", \"\", 1, \"custom-control-label\"], [\"type\", \"checkbox\", \"name\", \"authorization\", \"id\", \"customCheck2\", 1, \"custom-control-input\"], [\"for\", \"customCheck2\", \"required\", \"\", 1, \"custom-control-label\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [\"href\", \"/login\", 1, \"link-login\"], [1, \"invalid-feedback\"]],\n  template: function RegistroComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"a\", 1);\n      i0.ɵɵelement(2, \"img\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"form\", 3)(4, \"div\", 4)(5, \"label\", 5);\n      i0.ɵɵtext(6, \"Nombre: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function RegistroComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.nombre = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 4)(9, \"label\", 7);\n      i0.ɵɵtext(10, \"Apellidos: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function RegistroComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.apellido = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 4)(13, \"label\", 9);\n      i0.ɵɵtext(14, \"Nombre de usuario: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function RegistroComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.nick = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 4)(17, \"label\", 11);\n      i0.ɵɵtext(18, \"Correo electr\\u00F3nico: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function RegistroComponent_Template_input_ngModelChange_19_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"div\", 4)(21, \"label\", 13);\n      i0.ɵɵtext(22, \"Contrase\\u00F1a: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function RegistroComponent_Template_input_ngModelChange_23_listener($event) {\n        return ctx.contrasenia = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"div\", 4)(25, \"label\", 15);\n      i0.ɵɵtext(26, \"Confirmar Contrase\\u00F1a: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"input\", 16);\n      i0.ɵɵlistener(\"ngModelChange\", function RegistroComponent_Template_input_ngModelChange_27_listener($event) {\n        return ctx.contraseniaRep = $event;\n      })(\"ngModelChange\", function RegistroComponent_Template_input_ngModelChange_27_listener() {\n        return ctx.contraseniaCoincide = ctx.contrasenia === ctx.contraseniaRep;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(28, RegistroComponent_div_28_Template, 2, 0, \"div\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"div\", 4)(30, \"label\", 18);\n      i0.ɵɵtext(31, \"Seleccione su foto de usuario: (PNG,JPG) \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"input\", 19);\n      i0.ɵɵlistener(\"ngModelChange\", function RegistroComponent_Template_input_ngModelChange_32_listener($event) {\n        return ctx.foto = $event;\n      })(\"change\", function RegistroComponent_Template_input_change_32_listener($event) {\n        return ctx.onFileSelected($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(33, \"br\");\n      i0.ɵɵelementStart(34, \"div\", 20)(35, \"tr\")(36, \"td\");\n      i0.ɵɵelement(37, \"input\", 21);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"td\")(39, \"label\", 22);\n      i0.ɵɵtext(40, \"Acepto la Pol\\u00EDtica de Privacidad\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(41, \"tr\")(42, \"td\");\n      i0.ɵɵelement(43, \"input\", 23);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(44, \"td\")(45, \"label\", 24);\n      i0.ɵɵtext(46, \"Autorizo el uso de mi informaci\\u00F3n\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(47, \"button\", 25);\n      i0.ɵɵlistener(\"click\", function RegistroComponent_Template_button_click_47_listener() {\n        return ctx.addUserService();\n      });\n      i0.ɵɵtext(48, \"Registrarme\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"p\");\n      i0.ɵɵtext(50, \"\\u00BFYa tienes una cuenta? \");\n      i0.ɵɵelementStart(51, \"a\", 26);\n      i0.ɵɵtext(52, \"Iniciar Sesi\\u00F3n\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.nombre);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.apellido);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.nick);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.contrasenia);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.contraseniaRep)(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, !ctx.contraseniaCoincide));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.contraseniaCoincide);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.foto);\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"disabled\", !ctx.contraseniaCoincide);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgIf, i2.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n  styles: [\"body[_ngcontent-%COMP%] {\\n    font-family: Arial, sans-serif;\\n}\\n\\nh1[_ngcontent-%COMP%] {\\n    color: #3F2811;\\n    text-align: center;\\n}\\n\\nform[_ngcontent-%COMP%] {\\n    background-color: #D4D0C4;\\n    padding: 20px;\\n    border-radius: 10px;\\n    width: 400px;\\n    margin: 0 auto;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n    display: block;\\n    margin-bottom: 10px;\\n}\\n\\ninput[type=\\\"text\\\"][_ngcontent-%COMP%], input[type=\\\"email\\\"][_ngcontent-%COMP%], input[type=\\\"password\\\"][_ngcontent-%COMP%] {\\n    width: 100%;\\n    padding: 10px;\\n    margin-bottom: 20px;\\n    border-radius: 5px;\\n    border: none;\\n}\\n\\ninput[type=\\\"contrasenia\\\"][_ngcontent-%COMP%] {\\n    transition: all 0.5s ease-in-out;\\n    border-radius: 5px 5px 5px 5px;\\n}\\n\\ntr[_ngcontent-%COMP%] {\\n    margin-left: 50%;\\n    transform: translateX(18%);\\n    \\n}\\n\\ntd[_ngcontent-%COMP%]{\\n    padding-right: 15px;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n    background-color: #8A9A8A;\\n    color: white;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 33.3%;\\n    border: none;\\n    border-radius: 5px;\\n    padding: 5px;\\n    cursor: pointer;\\n    font-size: 16px;\\n    margin-left: 50%;\\n    margin-top: 20px;\\n    transform: translateX(-50%);\\n}\\n\\nbutton[_ngcontent-%COMP%]:disabled{\\n    background-color: gray;\\n    color: white;\\n}\\n\\np[_ngcontent-%COMP%]{\\n    margin-top: 20px;\\n    text-align: center;\\n}\\n\\n.link-login[_ngcontent-%COMP%]{\\n    color: #3F2811;\\n    font-weight: bold;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvcmVnaXN0cm8vcmVnaXN0cm8uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLDhCQUE4QjtBQUNsQzs7QUFFQTtJQUNJLGNBQWM7SUFDZCxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSx5QkFBeUI7SUFDekIsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixZQUFZO0lBQ1osY0FBYztBQUNsQjs7QUFFQTtJQUNJLGNBQWM7SUFDZCxtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsWUFBWTtBQUNoQjs7QUFFQTtJQUtJLGdDQUFnQztJQUVoQyw4QkFBOEI7QUFDbEM7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsMEJBQTBCOztBQUU5Qjs7QUFFQTtJQUNJLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osYUFBYTtJQUNiLG1CQUFtQjtJQUNuQix1QkFBdUI7SUFDdkIsWUFBWTtJQUNaLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLGVBQWU7SUFDZixlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQiwyQkFBMkI7QUFDL0I7O0FBRUE7SUFDSSxzQkFBc0I7SUFDdEIsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsaUJBQWlCO0FBQ3JCIiwic291cmNlc0NvbnRlbnQiOlsiYm9keSB7XG4gICAgZm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmO1xufVxuXG5oMSB7XG4gICAgY29sb3I6ICMzRjI4MTE7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG5mb3JtIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRDREMEM0O1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICB3aWR0aDogNDAwcHg7XG4gICAgbWFyZ2luOiAwIGF1dG87XG59XG5cbmxhYmVsIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuXG5pbnB1dFt0eXBlPVwidGV4dFwiXSwgaW5wdXRbdHlwZT1cImVtYWlsXCJdLCBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0ge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgYm9yZGVyOiBub25lO1xufVxuXG5pbnB1dFt0eXBlPVwiY29udHJhc2VuaWFcIl0ge1xuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDAuNXMgZWFzZS1pbi1vdXQ7XG4gICAgLW1vei10cmFuc2l0aW9uOiBhbGwgMC41cyBlYXNlLWluLW91dDtcbiAgICAtbXMtdHJhbnNpdGlvbjogYWxsIDAuNXMgZWFzZS1pbi1vdXQ7XG4gICAgLW8tdHJhbnNpdGlvbjogYWxsIDAuNXMgZWFzZS1pbi1vdXQ7XG4gICAgdHJhbnNpdGlvbjogYWxsIDAuNXMgZWFzZS1pbi1vdXQ7XG4gICAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiA1cHggNXB4IDVweCA1cHg7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4IDVweCA1cHggNXB4O1xufVxuXG50ciB7XG4gICAgbWFyZ2luLWxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTglKTtcbiAgICBcbn1cblxudGR7XG4gICAgcGFkZGluZy1yaWdodDogMTVweDtcbn1cblxuYnV0dG9uIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjOEE5QThBO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgd2lkdGg6IDMzLjMlO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgcGFkZGluZzogNXB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgbWFyZ2luLWxlZnQ6IDUwJTtcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbn1cblxuYnV0dG9uOmRpc2FibGVke1xuICAgIGJhY2tncm91bmQtY29sb3I6IGdyYXk7XG4gICAgY29sb3I6IHdoaXRlO1xufVxuXG5we1xuICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4ubGluay1sb2dpbntcbiAgICBjb2xvcjogIzNGMjgxMTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["Usuarios","i0","RegistroComponent","constructor","registSvc","router","ngOnInit","onFileSelected","event","file","target","files","reader","FileReader","readAsDataURL","onload","foto","result","addUserService","usuario","nick","contrasenia","nombre","apellido","email","addNewUser","subscribe","response","exito","alert","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\L\\Desktop\\helpcook-master\\helpcook-master\\src\\app\\pages\\registro\\registro.component.ts","C:\\Users\\L\\Desktop\\helpcook-master\\helpcook-master\\src\\app\\pages\\registro\\registro.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { RegistroService } from './registro-service.service';\nimport { Usuarios } from 'src/app/Usuarios.model';\nimport { Router } from '@angular/router';\nimport { UsuariosResponse } from 'src/app/UsuariosResponse.model';\n/**\n * Componente para la página de registro\n *\n * Creará el usuario que se ha creado con los valores introducidos en el form\n */\n@Component({\n  selector: 'app-registro',\n  templateUrl: './registro.component.html',\n  styleUrls: ['./registro.component.css'],\n})\nexport class RegistroComponent implements OnInit {\n  /**\n   * Variable para almacenar el nombre real de la persona que se registra\n   */\n  nombre: string;\n\n  /**\n   * Variable para almacenar los apellidos de la persona que se registra\n   */\n  apellido: string;\n\n  /**\n   * Variable para almacenar el nick/username que tendrá en su cuenta de usuario\n   */\n  nick: string;\n\n  /**\n   * Variable para almacenar el email con el que se registra la persona y que estara asignado a su cuenta de usuario\n   */\n  email: string;\n\n  /**\n   * Variable para almacenar la contraseña para acceder a su cuenta de usuario\n   */\n  contrasenia: string;\n\n  /**\n   * Variable para almacenar la contraseña repetida para comprobar que la contraseña que ha introducido es la deseada\n   */\n  contraseniaRep: string;\n\n  /**\n   * Variable para almacenar la foto de perfil del usuario que esta creando\n   */\n  foto: string;\n\n  /**\n   * Variable para controlar que la petición de las contraseña coincidan\n   */\n  contraseniaCoincide: boolean = true;\n\n  /**\n  *  \n  * Injectamos los servicios para la conexión con el Backend y el routing con las demás páginas\n  * @param registSvc Servicio para hacer la consulta al backend\n  * @param router Para el envio del Usuario a otras páginas\n  */\n  constructor(private registSvc: RegistroService, private router: Router) {}\n\n  /**\n   * Método que se varga cuando se inicializa la página\n   */\n  ngOnInit(): void {}\n\n  /**\n   * Método para pasar el archivo a Base 64 y poder guardarlo en la base de datos como un string\n   * @param event recibimos el archivo de la foto\n   */\n  onFileSelected(event) {\n    const file = event.target.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        this.foto = reader.result as string;\n      };\n    }\n  }\n\n  /**\n   * Método que se carga cuando el usuario pulsa el botón \"Registrarme\"\n   *\n   * Recogemos los valores que el usuario introduce en el formulario de registro y los asignamos al objeto usuario\n   *\n   * Llamamos al servicio de Registro para la conexión con el back y mostramos por la consola\n   * \"Se ha guardado el usuario: \" si el usuario se ha guardado correctamente o\n   * \"Error de red o error en el servidor\" si el usuario no se ha guardado correctamente dependiendo de donde proceda el error\n   */\n\n  addUserService() {\n    let usuario = new Usuarios(\n      this.nick,\n      this.contrasenia,\n      this.nombre,\n      this.apellido,\n      this.email,\n      this.foto\n    );\n\n    this.registSvc\n      .addNewUser(usuario)\n      .subscribe((response: UsuariosResponse) => {\n        if (response.exito) {\n          alert('Usuario registrado con éxito');\n          this.router.navigate(['/login']);\n        } else {\n          alert('Este correo electrónico ya está en uso. Inserte uno válido.');\n        }\n      });\n  }\n}\n","<!-- Seccion logo -->\n<div class=\"text-center\" style=\"margin-top: 30px\">\n    <a class=\"nav-link\" routerLink=\"\"><img src=\"/assets/img/logo.png\" class=\"w-25\" alt=\"\" /></a>\n</div>\n<!-- Formulario de registro -->\n<form enctype=\"multipart/form-data\">\n    <!-- Nombre real de la persona que se esta registrando -->\n    <div class=\"form-group\">\n        <label for=\"InputNombre\">Nombre: </label>\n        <input type=\"text\" class=\"form-control\" name=\"nombre\" [(ngModel)]=\"nombre\" id=\"InputNombre\"\n            placeholder=\"Introduzca su nombre\" required>\n    </div>\n    <!-- Apellidos de la persona que se esta registrando -->\n    <div class=\"form-group\">\n        <label for=\"InputApellidos\">Apellidos: </label>\n        <input type=\"text\" class=\"form-control\" name=\"apellidos\" [(ngModel)]=\"apellido\" id=\"InputApellidos\"\n            placeholder=\"Introduzca sus apellidos\" required>\n    </div>\n    <!-- Nick del usuario que se esta registrando -->\n    <div class=\"form-group\">\n        <label for=\"InputNick\">Nombre de usuario: </label>\n        <input type=\"text\" class=\"form-control\" name=\"nick\" [(ngModel)]=\"nick\" id=\"InputNick\"\n            placeholder=\"Introduzca su nombre de usuario\" required>\n    </div>\n    <!-- Correo del usuario que se esta registrando -->\n    <div class=\"form-group\">\n        <label for=\"InputContrasenia\">Correo electrónico: </label>\n        <input type=\"email\" class=\"form-control\" name=\"email\" [(ngModel)]=\"email\" id=\"InputContrasenia\"\n            placeholder=\"Introduzca un correo electrónico válido\" required>\n    </div>\n    <!-- Contraseña del usuario que se esta registrando -->\n    <div class=\"form-group\">\n        <label for=\"InputContrasenia1\">Contraseña: </label>\n        <input type=\"password\" class=\"form-control\" name=\"contrasenia\" [(ngModel)]=\"contrasenia\" id=\"InputContrasenia1\" placeholder=\"Introduzca la contraseña\"\n            required>\n    </div>\n    <!-- Confirmación de la contraseña -->\n    <div class=\"form-group\">\n        <label for=\"confirm-password\">Confirmar Contraseña: </label>\n        <input type=\"password\" class=\"form-control\" name=\"confirm-password\" \n        [(ngModel)]=\"contraseniaRep\" \n        placeholder=\"Repita la contraseña\" required\n        (ngModelChange)=\"contraseniaCoincide = contrasenia === contraseniaRep\"\n        [ngClass]=\"{'is-invalid': !contraseniaCoincide}\"\n        >\n        <div *ngIf=\"!contraseniaCoincide\" class=\"invalid-feedback\">\n            Las contraseñas no coinciden.\n        </div>\n    </div>\n    <!-- Foto de perfil del usuario que se esta registrando -->\n    <div class=\"form-group\">\n        <label for=\"InputFoto\">Seleccione su foto de usuario: (PNG,JPG) </label>\n        <input type=\"file\"  class=\"form-control\" name=\"file\" id=\"InputFoto\" aria-label=\"file example\" [(ngModel)]=\"foto\" required (change)=\"onFileSelected($event)\">\n    </div>\n    <br/>\n    <div class=\"custom-control custom-checkbox\">\n        <!-- Política de privacidad -->\n        <tr>\n            <td><input type=\"checkbox\" class=\"custom-control-input\" name=\"privacity\" id=\"customCheck1\"></td>\n            <td> <label class=\"custom-control-label\" for=\"customCheck1\" required>Acepto la Política de Privacidad</label></td>\n        </tr>\n        <!-- Autorización de uso de datos -->\n        <tr>\n            <td><input type=\"checkbox\" class=\"custom-control-input\" name=\"authorization\" id=\"customCheck2\"></td>\n            <td> <label class=\"custom-control-label\" for=\"customCheck2\" required>Autorizo el uso de mi información</label></td>\n        </tr>\n    </div>\n    <!-- Botón de registro que llama a la funcion guardar usuario --> \n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"addUserService()\" [disabled]=\"!contraseniaCoincide\">Registrarme</button>\n    <!-- Botón que te dirige a la página de Inicio de sesión -->\n    <p>¿Ya tienes una cuenta? <a class=\"link-login\" href=\"/login\">Iniciar Sesión</a></p>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}